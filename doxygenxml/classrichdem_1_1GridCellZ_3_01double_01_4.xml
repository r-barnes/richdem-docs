<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrichdem_1_1GridCellZ_3_01double_01_4" kind="class" language="C++" prot="public">
    <compoundname>richdem::GridCellZ&lt; double &gt;</compoundname>
    <basecompoundref refid="classrichdem_1_1GridCell" prot="public" virt="non-virtual">richdem::GridCell</basecompoundref>
    <includes refid="grid__cell_8hpp" local="no">grid_cell.hpp</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double richdem::GridCellZ&lt; double &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
<para>Grid cell&apos;s z-coordinate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="43" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrichdem_1_1GridCellZ_3_01double_01_4_1ad7bdd39a092bd96c381d6bba77862b41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>richdem::GridCellZ&lt; double &gt;::GridCellZ</definition>
        <argsstring>(int x, int y, double z)</argsstring>
        <name>GridCellZ</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="44" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1GridCellZ_3_01double_01_4_1ac66d0e6d54b49d2ba15b709c8b6ac22f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>richdem::GridCellZ&lt; double &gt;::GridCellZ</definition>
        <argsstring>()</argsstring>
        <name>GridCellZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="45" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1GridCellZ_3_01double_01_4_1af3ad718bafcb92a6af70b120b68e1c2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool richdem::GridCellZ&lt; double &gt;::operator&lt;</definition>
        <argsstring>(const GridCellZ&lt; double &gt; &amp;a) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; double &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="47" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1GridCellZ_3_01double_01_4_1acd6044e315c6349c33f34943609828be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool richdem::GridCellZ&lt; double &gt;::operator&gt;</definition>
        <argsstring>(const GridCellZ&lt; double &gt; &amp;a) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; double &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="48" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1GridCellZ_3_01double_01_4_1aa5f1769aa9d0ef830f52bbb702371f06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool richdem::GridCellZ&lt; double &gt;::operator&gt;=</definition>
        <argsstring>(const GridCellZ&lt; double &gt; &amp;a) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; double &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="49" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1GridCellZ_3_01double_01_4_1af2a4c6717f0965ffe76f2a72383ef49e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool richdem::GridCellZ&lt; double &gt;::operator&lt;=</definition>
        <argsstring>(const GridCellZ&lt; double &gt; &amp;a) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; double &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="50" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1GridCellZ_3_01double_01_4_1a160be79cf426eed289a8fd87b41cb0e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool richdem::GridCellZ&lt; double &gt;::operator==</definition>
        <argsstring>(const GridCellZ&lt; double &gt; &amp;a) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; double &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="51" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1GridCellZ_3_01double_01_4_1aa54cbb7d6d439fdaa307119d051e775b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool richdem::GridCellZ&lt; double &gt;::operator!=</definition>
        <argsstring>(const GridCellZ&lt; double &gt; &amp;a) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; double &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="52" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An (x,y,z) cell with NaNs taken as infinitely small numbers. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="16">
        <label>richdem::GridCell</label>
        <link refid="classrichdem_1_1GridCell"/>
      </node>
      <node id="15">
        <label>richdem::GridCellZ&lt; double &gt;</label>
        <link refid="classrichdem_1_1GridCellZ_3_01double_01_4"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>richdem::GridCell</label>
        <link refid="classrichdem_1_1GridCell"/>
      </node>
      <node id="17">
        <label>richdem::GridCellZ&lt; double &gt;</label>
        <link refid="classrichdem_1_1GridCellZ_3_01double_01_4"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="41" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="41" bodyend="53"/>
    <listofallmembers>
      <member refid="classrichdem_1_1GridCell_1aa4919ca2a8fbd0faffb2303ff8cd0eec" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>GridCell</name></member>
      <member refid="classrichdem_1_1GridCell_1af7bb9c5f4a4721bc12899c5825283f70" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>GridCell</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1ad7bdd39a092bd96c381d6bba77862b41" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>GridCellZ</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1ac66d0e6d54b49d2ba15b709c8b6ac22f" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>GridCellZ</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1aa54cbb7d6d439fdaa307119d051e775b" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>operator!=</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1af3ad718bafcb92a6af70b120b68e1c2a" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>operator&lt;</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1af2a4c6717f0965ffe76f2a72383ef49e" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>operator&lt;=</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a160be79cf426eed289a8fd87b41cb0e7" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>operator==</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1acd6044e315c6349c33f34943609828be" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>operator&gt;</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1aa5f1769aa9d0ef830f52bbb702371f06" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>operator&gt;=</name></member>
      <member refid="classrichdem_1_1GridCell_1ad0720d4f9d57365fc5abe3f4f63e32c9" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>x</name></member>
      <member refid="classrichdem_1_1GridCell_1acdf9ef83d894321472076b7562356485" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>y</name></member>
      <member refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" prot="public" virt="non-virtual"><scope>richdem::GridCellZ&lt; double &gt;</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
