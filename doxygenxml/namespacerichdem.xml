<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacerichdem" kind="namespace" language="C++">
    <compoundname>richdem</compoundname>
    <innerclass refid="classrichdem_1_1A2Array2D" prot="public">richdem::A2Array2D</innerclass>
    <innerclass refid="classrichdem_1_1Array2D" prot="public">richdem::Array2D</innerclass>
    <innerclass refid="classrichdem_1_1GridCell" prot="public">richdem::GridCell</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZ" prot="public">richdem::GridCellZ</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZ_3_01double_01_4" prot="public">richdem::GridCellZ&lt; double &gt;</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZ_3_01float_01_4" prot="public">richdem::GridCellZ&lt; float &gt;</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZk" prot="public">richdem::GridCellZk</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZk__pq" prot="public">richdem::GridCellZk_pq</innerclass>
    <innerclass refid="classrichdem_1_1LayoutfileReader" prot="public">richdem::LayoutfileReader</innerclass>
    <innerclass refid="classrichdem_1_1LayoutfileWriter" prot="public">richdem::LayoutfileWriter</innerclass>
    <innerclass refid="classrichdem_1_1LRU" prot="public">richdem::LRU</innerclass>
    <innerclass refid="classrichdem_1_1ManagedVector" prot="public">richdem::ManagedVector</innerclass>
    <innerclass refid="classrichdem_1_1ProgressBar" prot="public">richdem::ProgressBar</innerclass>
    <innerclass refid="classrichdem_1_1StreamLogger" prot="public">richdem::StreamLogger</innerclass>
    <innerclass refid="classrichdem_1_1TA__Setup__Curves__Vars" prot="public">richdem::TA_Setup_Curves_Vars</innerclass>
    <innerclass refid="classrichdem_1_1TA__Setup__Vars" prot="public">richdem::TA_Setup_Vars</innerclass>
    <innerclass refid="classrichdem_1_1Timer" prot="public">richdem::Timer</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861" prot="public" static="no">
        <name>LogFlag</name>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861a996fec35f4014ebb767a7667bdbc3533" prot="public">
          <name>ALG_NAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861aa4b7195c7f18b459ca6de59e5c2cb5f9" prot="public">
          <name>CITATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861a220f54171564a138dcfab3e17a76806c" prot="public">
          <name>CONFIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861a9f232b8a27940b840ff9c3210b7758fe" prot="public">
          <name>DEBUG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861aa180e00e72877277cc66187939c556c8" prot="public">
          <name>ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861abd79b31f833a4906e545789228c86223" prot="public">
          <name>MEM_USE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861a545f3f4dc4c60de62b044239e2276ccc" prot="public">
          <name>MISC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861abdc28cd4f257bdd98a8d09437db93b1f" prot="public">
          <name>PROGRESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861acd5ae75feae9475a2c9366807434d73d" prot="public">
          <name>TIME_USE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="logger_8hpp_1a07f397cb3f24beb807e4c08ed087b861a833bc8225d4d69c42ee35fddeb64b826" prot="public">
          <name>WARN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/logger.hpp" line="10" column="1" bodyfile="/z/richdem/include/richdem/common/logger.hpp" bodystart="10" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="Lindsay2016_8hpp_1afe1b07817c9f6623f537c5e34a20b7e2" prot="public" static="no">
        <name>LindsayMode</name>
        <enumvalue id="Lindsay2016_8hpp_1afe1b07817c9f6623f537c5e34a20b7e2ad0787dfbae6ddbb1cc6489a6906379cb" prot="public">
          <name>COMPLETE_BREACHING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Lindsay2016_8hpp_1afe1b07817c9f6623f537c5e34a20b7e2a718a30589206f4e03a4e172ae4d31ef2" prot="public">
          <name>SELECTIVE_BREACHING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Lindsay2016_8hpp_1afe1b07817c9f6623f537c5e34a20b7e2a90cd64036bfe875b99ba385c71bbca53" prot="public">
          <name>CONSTRAINED_BREACHING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" line="13" column="1" bodyfile="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="enum" id="Lindsay2016_8hpp_1a8d754d026402cea3c7610facbf899e1a" prot="public" static="no">
        <name>LindsayCellType</name>
        <enumvalue id="Lindsay2016_8hpp_1a8d754d026402cea3c7610facbf899e1aab5d5f6bdbbc36bc6154232f3bc68ac0b" prot="public">
          <name>UNVISITED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Lindsay2016_8hpp_1a8d754d026402cea3c7610facbf899e1aaa4e1be320499616b0ba949d5c694e0fe" prot="public">
          <name>VISITED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Lindsay2016_8hpp_1a8d754d026402cea3c7610facbf899e1aa12fb955c3767e88a63d8e27ca6032cb6" prot="public">
          <name>EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" line="19" column="1" bodyfile="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" bodystart="19" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="constants_8hpp_1a3284403c132b2ff480c997a0de5d7d49" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t richdem::d8_flowdir_t</definition>
        <argsstring></argsstring>
        <name>d8_flowdir_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="24" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="grid__cell_8hpp_1a92b6e4f23debefdfceb2d3f8cc4d85c6" prot="public" static="no">
        <type>std::priority_queue&lt; <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; elev_t &gt;, std::vector&lt; <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; elev_t &gt; &gt;, std::greater&lt; <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt; elev_t &gt; &gt; &gt;</type>
        <definition>using richdem::GridCellZ_pq = typedef std::priority_queue&lt;GridCellZ&lt;elev_t&gt;, std::vector&lt;GridCellZ&lt;elev_t&gt; &gt;, std::greater&lt;GridCellZ&lt;elev_t&gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>GridCellZ_pq</name>
        <briefdescription>
<para>A priority queue of <ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>, sorted by ascending height. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/grid_cell.hpp" line="91" column="1" bodyfile="/z/richdem/include/richdem/common/grid_cell.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="random_8hpp_1a01f2a97e3bad024f641662da578b9f2b" prot="public" static="no">
        <type>std::string</type>
        <definition>typedef std::string richdem::RandomEngineState</definition>
        <argsstring></argsstring>
        <name>RandomEngineState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.hpp" line="22" column="1" bodyfile="/z/richdem/include/richdem/common/random.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="random_8hpp_1ac2fed8c1069e5c67f91b5f582ace2d00" prot="public" static="no">
        <type>std::mt19937</type>
        <definition>typedef std::mt19937 richdem::our_random_engine</definition>
        <argsstring></argsstring>
        <name>our_random_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.hpp" line="24" column="1" bodyfile="/z/richdem/include/richdem/common/random.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Zhou2016_8hpp_1a1f35d4ccd08676f973197a7dd034d4aa" prot="public" static="no">
        <type>char</type>
        <definition>typedef char richdem::label_t</definition>
        <argsstring></argsstring>
        <name>label_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Zhou2016.hpp" line="22" column="1" bodyfile="/z/richdem/include/richdem/depressions/Zhou2016.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="garbrecht_8hpp_1a86e521fa6a154f09446c378865ca8889" prot="public" static="no">
        <type>std::deque&lt; grid_cell &gt;</type>
        <definition>typedef std::deque&lt;grid_cell&gt; richdem::flat_type</definition>
        <argsstring></argsstring>
        <name>flat_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/garbrecht.hpp" line="14" column="1" bodyfile="/z/richdem/include/richdem/flats/garbrecht.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="constants_8hpp_1aa5b197c553cb75cc5bed18478bbeab41" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int richdem::dx[9]</definition>
        <argsstring>[9]</argsstring>
        <name>dx</name>
        <initializer>= {0, -1, -1,  0,  1, 1, 1, 0, -1}</initializer>
        <briefdescription>
<para>x offsets of D8 neighbours, from a central cell </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="29" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a8eee3f4a3891f1bd2c44ce2df9df4fb6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int richdem::dy[9]</definition>
        <argsstring>[9]</argsstring>
        <name>dy</name>
        <initializer>= {0,  0, -1, -1, -1, 0, 1, 1,  1}</initializer>
        <briefdescription>
<para>y offsets of D8 neighbours, from a central cell </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="30" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1ae1cae59347aa5e5a245f8c387627ff05" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool richdem::n_diag[9]</definition>
        <argsstring>[9]</argsstring>
        <name>n_diag</name>
        <initializer>= {0,  0,  1,  0,  1, 0, 1, 0,  1}</initializer>
        <briefdescription>
<para>True along diagonal directions, false along north, south, east, west. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="31" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1aa1178408028bc31fecd19513050d219f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int richdem::d8_inverse[9]</definition>
        <argsstring>[9]</argsstring>
        <name>d8_inverse</name>
        <initializer>= {0,5,6,7,8,1,2,3,4}</initializer>
        <briefdescription>
<para>Directions from neighbours to the central cell. Neighbours are labeled 0-8. This is the inverse direction leading from a neighbour to the central cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="36" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a6e09a55d55a50ef455b5d18df7fa9d67" prot="public" static="no" mutable="no">
        <type>const wchar_t</type>
        <definition>const wchar_t richdem::fdarrows[9]</definition>
        <argsstring>[9]</argsstring>
        <name>fdarrows</name>
        <initializer>= {L&apos;·&apos;,L&apos;←&apos;,L&apos;↖&apos;,L&apos;↑&apos;,L&apos;↗&apos;,L&apos;→&apos;,L&apos;↘&apos;,L&apos;↓&apos;,L&apos;↙&apos;}</initializer>
        <briefdescription>
<para>Arrows indicating flow directions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="39" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a37622d7ed12bb4389b2bb066ddda9970" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double richdem::SQRT2</definition>
        <argsstring></argsstring>
        <name>SQRT2</name>
        <initializer>= 1.414213562373095048801688724209698078569671875376948</initializer>
        <briefdescription>
<para>sqrt(2), used to generate distances from a central cell to its neighbours </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="42" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a8fd8834b599b4523a7fe0d378a832f57" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double richdem::dr[9]</definition>
        <argsstring>[9]</argsstring>
        <name>dr</name>
        <initializer>= {0,1,SQRT2,1,SQRT2,1,SQRT2,1,SQRT2}</initializer>
        <briefdescription>
<para>Distances from a central cell to each of its 8 neighbours. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="45" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1aeaccaa412ae3919c0e0ab6a8ee00848f" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t richdem::d8_arcgis[9]</definition>
        <argsstring>[9]</argsstring>
        <name>d8_arcgis</name>
        <initializer>= {0,16,32,64,128,1,2,4,8}</initializer>
        <briefdescription>
<para>Convert from RichDEM flowdirs to ArcGIS flowdirs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="48" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a464cfb1cd027369dd6e36c1e33369abe" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t richdem::FLOWDIR_NO_DATA</definition>
        <argsstring></argsstring>
        <name>FLOWDIR_NO_DATA</name>
        <initializer>= 255</initializer>
        <briefdescription>
<para>Used to indicate that a flowdir cell is NoData. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="51" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a09b183c5986b6feec4b3b2ad9edbd144" prot="public" static="no" mutable="no">
        <type>const d8_flowdir_t</type>
        <definition>const d8_flowdir_t richdem::NO_FLOW</definition>
        <argsstring></argsstring>
        <name>NO_FLOW</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Value used to indicate that a cell does not have a defined flow direction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="55" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1ae7c3eb510787052eedc26c9a6eb2072a" prot="public" static="no" mutable="no">
        <type>const int32_t</type>
        <definition>const int32_t richdem::ACCUM_NO_DATA</definition>
        <argsstring></argsstring>
        <name>ACCUM_NO_DATA</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>Value used to indicate that a flow accumulation cell is NoData. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="58" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1af770d1c22aae5f3114acae5b2e6cd8a6" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t richdem::GRID_LEFT</definition>
        <argsstring></argsstring>
        <name>GRID_LEFT</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Indicates a tile is on the LHS of a DEM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="62" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a795163e9a236e14b8ba7caece3d07280" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t richdem::GRID_TOP</definition>
        <argsstring></argsstring>
        <name>GRID_TOP</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>Indicates a tile is on the top of a DEM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="63" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a4d410dde31b397d1a411066e4476aab4" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t richdem::GRID_RIGHT</definition>
        <argsstring></argsstring>
        <name>GRID_RIGHT</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>Indicates a tile is on the RHS of a DEM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="64" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="constants_8hpp_1a229f1a97f2bd40d6e836d1e86a6fee39" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t richdem::GRID_BOTTOM</definition>
        <argsstring></argsstring>
        <name>GRID_BOTTOM</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Indicates a tile is on the bottom of a DEM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/constants.hpp" line="65" column="1" bodyfile="/z/richdem/include/richdem/common/constants.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="version_8hpp_1a433cffd19424e299dacf773bbf6e4d70" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string richdem::git_hash</definition>
        <argsstring></argsstring>
        <name>git_hash</name>
        <initializer>= &quot;NO HASH SPECIFIED!&quot;</initializer>
        <briefdescription>
<para>Git hash of program&apos;s source (used if RICHDEM_GIT_HASH is undefined) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="19" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="version_8hpp_1a4cb04403c7ece2671538d0f2bd6f20e3" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string richdem::compilation_datetime</definition>
        <argsstring></argsstring>
        <name>compilation_datetime</name>
        <initializer>= __DATE__ &quot; &quot; __TIME__</initializer>
        <briefdescription>
<para>Date and time of when the program was compiled (used if RICHDEM_COMPILE_TIME is undefined) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="28" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="version_8hpp_1a279c4bad616b7a8dafc41103722d156b" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string richdem::program_name</definition>
        <argsstring></argsstring>
        <name>program_name</name>
        <initializer>= &quot;RichDEM v0.0.0&quot;</initializer>
        <briefdescription>
<para>Richdem vX.X.X. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="35" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="version_8hpp_1a61fcf01dde36f777889ae2168331ad85" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string richdem::author_name</definition>
        <argsstring></argsstring>
        <name>author_name</name>
        <initializer>= &quot;Richard Barnes&quot;</initializer>
        <briefdescription>
<para>Richard Barnes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="38" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="version_8hpp_1a79e708d0ce1764564a33a9eb9389da0b" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string richdem::copyright</definition>
        <argsstring></argsstring>
        <name>copyright</name>
        <initializer>= &quot;Richard Barnes © 2016&quot;</initializer>
        <briefdescription>
<para>Richard Barnes © 2016. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="41" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="version_8hpp_1aa2172aa0c68dee7c2f39761699305bc5" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string richdem::program_identifier</definition>
        <argsstring></argsstring>
        <name>program_identifier</name>
        <initializer>= program_name + &quot; (hash=&quot; + git_hash + &quot;, compiled=&quot;+compilation_datetime + &quot;)&quot;</initializer>
        <briefdescription>
<para>Richdem vX.X.X (hash=GIT HASH, compiled=COMPILATION DATE TIME) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="44" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="flat__resolution__dinf_8hpp_1afb395f3d7b41da22a28702164243c75b" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float richdem::d8_to_dinf[9]</definition>
        <argsstring>[9]</argsstring>
        <name>d8_to_dinf</name>
        <initializer>={-1, 4*M_PI/4, 3*M_PI/4, 2*M_PI/4, 1*M_PI/4, 0, 7*M_PI/4, 6*M_PI/4, 5*M_PI/4}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp" line="15" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dinf__flowdirs_8hpp_1a64e09d3f9456258d40bab94469681bd7" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int richdem::dy_e1[8]</definition>
        <argsstring>[8]</argsstring>
        <name>dy_e1</name>
        <initializer>= { 0 , -1 , -1 ,  0 ,  0 ,  1 , 1 ,  0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" line="25" column="1" bodyfile="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dinf__flowdirs_8hpp_1a0dec4b83deda363fa93004371df41e62" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int richdem::dx_e1[8]</definition>
        <argsstring>[8]</argsstring>
        <name>dx_e1</name>
        <initializer>= { 1 ,  0 ,  0 , -1 , -1 ,  0 , 0 ,  1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" line="26" column="1" bodyfile="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dinf__flowdirs_8hpp_1a0baefd5b09228ac14399bd559dda23a8" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int richdem::dy_e2[8]</definition>
        <argsstring>[8]</argsstring>
        <name>dy_e2</name>
        <initializer>= {-1 , -1 , -1 , -1 ,  1 ,  1 , 1 ,  1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" line="27" column="1" bodyfile="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dinf__flowdirs_8hpp_1a01525604cc56da42e65bef1fbe3f7062" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int richdem::dx_e2[8]</definition>
        <argsstring>[8]</argsstring>
        <name>dx_e2</name>
        <initializer>= { 1 ,  1 , -1 , -1 , -1 , -1 , 1 ,  1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" line="28" column="1" bodyfile="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dinf__flowdirs_8hpp_1a02f30b8f1b334b892edade94797ba8c4" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double richdem::ac[8]</definition>
        <argsstring>[8]</argsstring>
        <name>ac</name>
        <initializer>= { 0.,  1.,  1.,  2.,  2.,  3., 3.,  4.}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" line="29" column="1" bodyfile="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dinf__flowdirs_8hpp_1a2414e4b18f1e5c37d64ba84be7d80fd1" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double richdem::af[8]</definition>
        <argsstring>[8]</argsstring>
        <name>af</name>
        <initializer>= { 1., -1.,  1., -1.,  1., -1., 1., -1.}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" line="30" column="1" bodyfile="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dinf__methods_8hpp_1aed10f65fc87da1a0d3abf8d2833c78d1" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int richdem::dinf_dx[9]</definition>
        <argsstring>[9]</argsstring>
        <name>dinf_dx</name>
        <initializer>= {1,  1,  0, -1, -1, -1, 0, 1, 1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/dinf_methods.hpp" line="25" column="1" bodyfile="/z/richdem/include/richdem/methods/dinf_methods.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dinf__methods_8hpp_1a630337f7aad6f68195e651c4d0ca0c0d" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int richdem::dinf_dy[9]</definition>
        <argsstring>[9]</argsstring>
        <name>dinf_dy</name>
        <initializer>= {0, -1, -1, -1,  0,  1, 1, 1, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/dinf_methods.hpp" line="26" column="1" bodyfile="/z/richdem/include/richdem/methods/dinf_methods.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="richdem_8cpp_1a517fd7f0197b095d997c54b56f89b022" prot="public" static="no" mutable="no">
        <type>std::map&lt; LogFlag, std::string &gt;</type>
        <definition>std::map&lt;LogFlag, std::string&gt; richdem::log_flag_chars_begin</definition>
        <argsstring></argsstring>
        <name>log_flag_chars_begin</name>
        <initializer>= {
  {ALG_NAME, &quot;\nA&quot;},
  {CITATION, &quot;C&quot;},
  {CONFIG,   &quot;c&quot;},
  {DEBUG,    &quot;\033[95md&quot;},
  {ERROR,    &quot;E&quot;},
  {MEM_USE,  &quot; &quot;},
  {MISC,     &quot;m&quot;},
  {PROGRESS, &quot;p&quot;},
  {TIME_USE, &quot;t&quot;},
  {WARN,     &quot;\033[91mW&quot;}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/richdem.cpp" line="10" column="1" bodyfile="/z/richdem/include/richdem/richdem.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="richdem_8cpp_1a047c9712eedec596a132674b92532451" prot="public" static="no" mutable="no">
        <type>std::map&lt; LogFlag, std::string &gt;</type>
        <definition>std::map&lt;LogFlag, std::string&gt; richdem::log_flag_chars_end</definition>
        <argsstring></argsstring>
        <name>log_flag_chars_end</name>
        <initializer>= {
  {ALG_NAME, &quot;&quot;},
  {CITATION, &quot;\n&quot;},
  {CONFIG,   &quot;&quot;},
  {DEBUG,    &quot;&quot;},
  {ERROR,    &quot;&quot;},
  {MEM_USE,  &quot;&quot;},
  {MISC,     &quot;&quot;},
  {PROGRESS, &quot;&quot;},
  {TIME_USE, &quot;&quot;},
  {WARN,     &quot;&quot;}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/richdem.cpp" line="23" column="1" bodyfile="/z/richdem/include/richdem/richdem.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Array2D_8hpp_1a31b2cc3694d7b0830ad70e575d66058a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; richdem::ProcessMetadata</definition>
        <argsstring>(char **metadata)</argsstring>
        <name>ProcessMetadata</name>
        <param>
          <type>char **</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/Array2D.hpp" line="37" column="1" bodyfile="/z/richdem/include/richdem/common/Array2D.hpp" bodystart="37" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="Layoutfile_8hpp_1aca3a07d4fd1052928bdc0215a95d3314" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string richdem::trimStr</definition>
        <argsstring>(std::string const &amp;str)</argsstring>
        <name>trimStr</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Eliminate spaces from the beginning and end of str. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/Layoutfile.hpp" line="43" column="1" bodyfile="/z/richdem/include/richdem/common/Layoutfile.hpp" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="Layoutfile_8hpp_1a7c75c5db2b44536274fcc724222d38c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string richdem::GetBaseName</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>GetBaseName</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get only the filename without its extension. That is, convert &quot;path/to/file.ext&quot; to &quot;file&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/Layoutfile.hpp" line="55" column="1" bodyfile="/z/richdem/include/richdem/common/Layoutfile.hpp" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="memory_8hpp_1a8ddab201c8162bc55035dd612bbb67d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void richdem::ProcessMemUsage</definition>
        <argsstring>(long &amp;vmpeak, long &amp;vmhwm)</argsstring>
        <name>ProcessMemUsage</name>
        <param>
          <type>long &amp;</type>
          <declname>vmpeak</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>vmhwm</declname>
        </param>
        <briefdescription>
<para>Return memory statistics of the process. </para>        </briefdescription>
        <detaileddescription>
<para>This code is drawn from &quot;http://stackoverflow.com/a/671389/752843&quot;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">vmpeak</parametername>
</parameternamelist>
<parameterdescription>
<para>Peak virtual memory size (kB) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vmhwm</parametername>
</parameternamelist>
<parameterdescription>
<para>Peak resident set size (kB) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/memory.hpp" line="23" column="1" bodyfile="/z/richdem/include/richdem/common/memory.hpp" bodystart="23" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="random_8cpp_1a0e0c018cf0b8416b25d4a27bab4caf58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>our_random_engine &amp;</type>
        <definition>our_random_engine &amp; richdem::rand_engine</definition>
        <argsstring>()</argsstring>
        <name>rand_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.cpp" line="13" column="1" bodyfile="/z/richdem/include/richdem/common/random.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="random_8cpp_1abde574bcbcc999341b41922ce7637695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void richdem::seed_rand</definition>
        <argsstring>(unsigned long seed)</argsstring>
        <name>seed_rand</name>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.cpp" line="21" column="1" bodyfile="/z/richdem/include/richdem/common/random.cpp" bodystart="21" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="random_8cpp_1a0764ea8e143c9d98e8142440e950ae83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int richdem::uniform_rand_int</definition>
        <argsstring>(int from, int thru)</argsstring>
        <name>uniform_rand_int</name>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>thru</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.cpp" line="37" column="1" bodyfile="/z/richdem/include/richdem/common/random.cpp" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="random_8cpp_1afe1e593df6c1856954c777c836a72024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double richdem::uniform_rand_real</definition>
        <argsstring>(double from, double thru)</argsstring>
        <name>uniform_rand_real</name>
        <param>
          <type>double</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double</type>
          <declname>thru</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.cpp" line="44" column="1" bodyfile="/z/richdem/include/richdem/common/random.cpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="random_8cpp_1a6234e32ff90bd88bb81aa2423327caa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double richdem::normal_rand</definition>
        <argsstring>(double mean, double stddev)</argsstring>
        <name>normal_rand</name>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stddev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.cpp" line="51" column="1" bodyfile="/z/richdem/include/richdem/common/random.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="random_8cpp_1a265b2831bbaec88c0f63f1eab7a9c954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RandomEngineState</type>
        <definition>RandomEngineState richdem::SaveRandomState</definition>
        <argsstring>()</argsstring>
        <name>SaveRandomState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.cpp" line="57" column="1" bodyfile="/z/richdem/include/richdem/common/random.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="random_8cpp_1a05739a1af02fdd795364db7ba55dc148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void richdem::SetRandomState</definition>
        <argsstring>(const RandomEngineState &amp;res)</argsstring>
        <name>SetRandomState</name>
        <param>
          <type>const RandomEngineState &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.cpp" line="63" column="1" bodyfile="/z/richdem/include/richdem/common/random.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="random_8hpp_1a1762858ad29cf7faeebc1f2b0543236a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T richdem::uniform_bits</definition>
        <argsstring>()</argsstring>
        <name>uniform_bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/random.hpp" line="45" column="1" bodyfile="/z/richdem/include/richdem/common/random.hpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="version_8hpp_1a061d240cc223d22c9a0ff4f71f92ed64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string richdem::rdHash</definition>
        <argsstring>()</argsstring>
        <name>rdHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="46" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="version_8hpp_1a318d1aa20915b1195445a9ac935b1afc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string richdem::rdCompileTime</definition>
        <argsstring>()</argsstring>
        <name>rdCompileTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="50" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="version_8hpp_1abe02c96e2f60f969af19b7a970c6d1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string richdem::PrintRichdemHeader</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>PrintRichdemHeader</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Takes the program&apos;s command line arguments and prints to stdout a header with a variety of useful information for identifying the particulars of what was run. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/version.hpp" line="57" column="1" bodyfile="/z/richdem/include/richdem/common/version.hpp" bodystart="57" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1a79622e3cf15ad90e3fcb95d345a09e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool richdem::HasDepressions</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations)</argsstring>
        <name>HasDepressions</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Determine if a DEM has depressions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
Priority-Flood starts on the edges of the DEM and then works its way inwards using a priority queue to determine the lowest cell which has a path to the edge. The neighbours of this cell are added to the priority queue. If the neighbours are lower than the cell which is adding them, then they are part of a depression and the question is answered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="return"><para>True if the DEM contains depressions; otherwise, false.</para></simplesect>
<simplesect kind="par"><title>Correctness:</title><para>The correctness of this command is determined by inspection. (TODO) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="44" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="44" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1a45329a42d3ccd6f3c4c94f402c819104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFlood_Original</definition>
        <argsstring>(Array2D&lt; elev_t &gt; &amp;elevations)</argsstring>
        <name>PriorityFlood_Original</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Fills all pits and removes all digital dams from a DEM. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
Priority-Flood starts on the edges of the DEM and then works its way inwards using a priority queue to determine the lowest cell which has a path to the edge. The neighbours of this cell are added to the priority queue. If the neighbours are lower than the cell which is adding them, then they are raised to match its elevation; this fills depressions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM.</para></listitem><listitem><para><bold>elevations</bold> contains no landscape depressions or digital dams.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="par"><title>Correctness:</title><para>The correctness of this command is determined by inspection. (TODO) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="130" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="130" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1abb482cf1a3407a737642550fd5724285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFlood_Barnes2014</definition>
        <argsstring>(Array2D&lt; elev_t &gt; &amp;elevations)</argsstring>
        <name>PriorityFlood_Barnes2014</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Fills all pits and removes all digital dams from a DEM, but faster. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
Priority-Flood starts on the edges of the DEM and then works its way inwards using a priority queue to determine the lowest cell which has a path to the edge. The neighbours of this cell are added to the priority queue if they are higher. If they are lower, they are raised to the elevation of the cell adding them, thereby filling in pits. The neighbors are then added to a &quot;pit&quot; queue which is used to flood pits. Cells which are higher than a pit being filled are added to the priority queue. In this way, pits are filled without incurring the expense of the priority queue.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM.</para></listitem><listitem><para><bold>elevations</bold> contains no landscape depressions or digital dams.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="par"><title>Correctness:</title><para>The correctness of this command is determined by inspection. (TODO) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="217" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="217" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1ab346dd137b42a98d829583c8c5c7c93f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFloodEpsilon_Barnes2014</definition>
        <argsstring>(Array2D&lt; elev_t &gt; &amp;elevations)</argsstring>
        <name>PriorityFloodEpsilon_Barnes2014</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Modifies floating-point cell elevations to guarantee drainage. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This version of Priority-Flood starts on the edges of the DEM and then works its way inwards using a priority queue to determine the lowest cell which has a path to the edge. The neighbours of this cell are added to the priority queue if they are higher. If they are lower, then their elevation is increased by a small amount to ensure that they have a drainage path and they are added to a &quot;pit&quot; queue which is used to flood pits. Cells which are higher than a pit being filled are added to the priority queue. In this way, pits are filled without incurring the expense of the priority queue.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM.</para></listitem><listitem><para><bold>elevations</bold> has no landscape depressions, digital dams, or flats.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="par"><title>Correctness:</title><para>The correctness of this command is determined by inspection. (TODO) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="316" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="316" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1a58da3d771ea93e7aaedd977aec039b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFloodEpsilon_Barnes2014</definition>
        <argsstring>(Array2D&lt; uint8_t &gt; &amp;elevations)</argsstring>
        <name>PriorityFloodEpsilon_Barnes2014</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Priority-Flood+Epsilon is not available for integer data types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="398" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1ab0e37d08ed51cb919e6fc8f87c7e3f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFloodEpsilon_Barnes2014</definition>
        <argsstring>(Array2D&lt; uint16_t &gt; &amp;elevations)</argsstring>
        <name>PriorityFloodEpsilon_Barnes2014</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint16_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Priority-Flood+Epsilon is not available for integer data types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="404" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="404" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1ab651b97fb9e2c0fb1bef23ba77fa1d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFloodEpsilon_Barnes2014</definition>
        <argsstring>(Array2D&lt; int16_t &gt; &amp;elevations)</argsstring>
        <name>PriorityFloodEpsilon_Barnes2014</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int16_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Priority-Flood+Epsilon is not available for integer data types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="410" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="410" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1a5ef71ad7b199eacbf0023f211cc21fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFloodEpsilon_Barnes2014</definition>
        <argsstring>(Array2D&lt; uint32_t &gt; &amp;elevations)</argsstring>
        <name>PriorityFloodEpsilon_Barnes2014</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint32_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Priority-Flood+Epsilon is not available for integer data types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="416" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="416" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1a4237028d71a87c51a72822a5721512f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFloodEpsilon_Barnes2014</definition>
        <argsstring>(Array2D&lt; int32_t &gt; &amp;elevations)</argsstring>
        <name>PriorityFloodEpsilon_Barnes2014</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Priority-Flood+Epsilon is not available for integer data types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="422" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="422" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1ab3ff830ae2cb48afb5bcfac5b585bb04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFloodFlowdirs_Barnes2014</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; d8_flowdir_t &gt; &amp;flowdirs)</argsstring>
        <name>PriorityFloodFlowdirs_Barnes2014</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; d8_flowdir_t &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <briefdescription>
<para>Determines D8 flow directions and implicitly fills pits. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This version of Priority-Flood starts on the edges of the DEM and then works its way inwards using a priority queue to determine the lowest cell which has a path to the edge. The neighbours of this cell are given D8 flow directions which point to it. All depressions are implicitly filled and digital dams removed.</para><para>Based on Metz 2011.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of D8 flow directions</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>flowdirs</bold> contains a D8 flow direction of each cell or a value <emphasis>NO_FLOW</emphasis> for those cells which are not part of the DEM.</para></listitem><listitem><para><bold>flowdirs</bold> has no cells which are not part of a continuous flow path leading to the edge of the DEM.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="par"><title>Correctness:</title><para>The correctness of this command is determined by inspection. (TODO) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="457" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="457" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1ad4f7257a4a6401277a4f23af6e0baa56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::pit_mask</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; uint8_t &gt; &amp;pit_mask)</argsstring>
        <name>pit_mask</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>pit_mask</declname>
        </param>
        <briefdescription>
<para>Indicates which cells are in pits. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This version of Priority-Flood starts on the edges of the DEM and then works its way inwards using a priority queue to determine the lowest cell which has a path to the edge. If a cell is lower than this cell then it is part of a pit and is given a value 1 to indicate this. The result is a grid where every cell which is in a pit is labeled.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;pit_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of indicating which cells are in pits</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>pit_mask</bold> contains a 1 for each cell which is in a pit and a 0 for each cell which is not. The value 3 indicates NoData</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="par"><title>Correctness:</title><para>The correctness of this command is determined by inspection. (TODO) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="567" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="567" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1a9d73ece55c008d18351b6b732893b045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFloodWatersheds_Barnes2014</definition>
        <argsstring>(Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; int32_t &gt; &amp;labels, bool alter_elevations)</argsstring>
        <name>PriorityFloodWatersheds_Barnes2014</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alter_elevations</declname>
        </param>
        <briefdescription>
<para>Gives a common label to all cells which drain to a common point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
All the edge cells of the DEM are given unique labels. This version of Priority-Flood starts on the edges of the DEM and then works its way inwards using a priority queue to determine the lowest cell which has a path to the edge. The neighbours of this cell are then given its label. All depressions are implicitly filled and digital dams removed. The result is a grid of cells where all cells with a common label drain to a common point.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">labels</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid to hold the watershed labels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alter_elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then <bold>elevations</bold> is altered as though <ref refid="Barnes2014_8hpp_1abb482cf1a3407a737642550fd5724285" kindref="member">PriorityFlood_Barnes2014()</ref> had been applied. The result is that all cells drain to the edges of the DEM. Otherwise, <bold>elevations</bold> is not altered.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains no depressions or digital dams, if alter_elevations** was set.</para></listitem><listitem><para><bold>labels</bold> contains a label for each cell indicating its membership in a given watershed. Cells bearing common labels drain to common points.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="par"><title>Correctness:</title><para>The correctness of this command is determined by inspection. (TODO) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="681" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="681" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="Barnes2014_8hpp_1a4c85536555853a358dd8a44645dfc100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFlood_Barnes2014_max_dep</definition>
        <argsstring>(Array2D&lt; elev_t &gt; &amp;elevations, uint64_t max_dep_size)</argsstring>
        <name>PriorityFlood_Barnes2014_max_dep</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>max_dep_size</declname>
        </param>
        <briefdescription>
<para>Fill depressions, but only if they&apos;re small. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
Priority-Flood starts on the edges of the DEM and then works its way inwards using a priority queue to determine the lowest cell which has a path to the edge. The neighbours of this cell are added to the priority queue if they are higher. If they are lower, they are raised to the elevation of the cell adding them, thereby filling in pits. The neighbors are then added to a &quot;pit&quot; queue which is used to flood pits. Cells which are higher than a pit being filled are added to the priority queue. In this way, pits are filled without incurring the expense of the priority queue.</para><para>When a depression is encountered this command measures its size before filling it. Only small depressions are filled.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_dep_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Depression must have &lt;=max_dep_size cells to be filled</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM.</para></listitem><listitem><para><bold>elevations</bold> all landscape depressions &lt;=max_dep_size are filled.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="par"><title>Correctness:</title><para>The correctness of this command is determined by inspection. (TODO) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Barnes2014.hpp" line="805" column="1" bodyfile="/z/richdem/include/richdem/depressions/Barnes2014.hpp" bodystart="805" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="depressions_8hpp_1aae37b4f31182bf961ec82c9388287a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FillDepressions</definition>
        <argsstring>(Array2D&lt; T &gt; &amp;dem)</argsstring>
        <name>FillDepressions</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/depressions.hpp" line="9" column="1" bodyfile="/z/richdem/include/richdem/depressions/depressions.hpp" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="depressions_8hpp_1a58ee06accd39a0fda0c776a2992c8adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FillDepressionsEpsilon</definition>
        <argsstring>(Array2D&lt; T &gt; &amp;dem)</argsstring>
        <name>FillDepressionsEpsilon</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/depressions.hpp" line="10" column="1" bodyfile="/z/richdem/include/richdem/depressions/depressions.hpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="Lindsay2016_8hpp_1a272bd364171a4e16d8b34f1e5995e371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::Lindsay2016</definition>
        <argsstring>(Array2D&lt; T &gt; &amp;dem, int mode, bool fill_depressions, uint32_t maxpathlen, T maxdepth)</argsstring>
        <name>Lindsay2016</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_depressions</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxpathlen</declname>
        </param>
        <param>
          <type>T</type>
          <declname>maxdepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" line="26" column="1" bodyfile="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" bodystart="26" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="Lindsay2016_8hpp_1acc7edc1bca05c1559ccc6278c090c0dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::Lindsay2016</definition>
        <argsstring>(Array2D&lt; uint8_t &gt; &amp;dem, int mode, bool fill_depressions, uint32_t maxpathlen, uint8_t maxdepth)</argsstring>
        <name>Lindsay2016</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_depressions</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxpathlen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>maxdepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" line="213" column="1" bodyfile="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="Lindsay2016_8hpp_1ae306c9c4462016976fff8f0e972a44d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::Lindsay2016</definition>
        <argsstring>(Array2D&lt; int16_t &gt; &amp;dem, int mode, bool fill_depressions, uint32_t maxpathlen, int16_t maxdepth)</argsstring>
        <name>Lindsay2016</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int16_t &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_depressions</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxpathlen</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>maxdepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" line="218" column="1" bodyfile="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="Lindsay2016_8hpp_1a1af6c6e5ce5105fb85c73bfc31396e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::Lindsay2016</definition>
        <argsstring>(Array2D&lt; uint16_t &gt; &amp;dem, int mode, bool fill_depressions, uint32_t maxpathlen, uint16_t maxdepth)</argsstring>
        <name>Lindsay2016</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint16_t &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_depressions</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxpathlen</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxdepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" line="223" column="1" bodyfile="/z/richdem/include/richdem/depressions/Lindsay2016.hpp" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="Zhou2016_8hpp_1a618347c8d1f638164f32697733431ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::ProcessTraceQue_onepass</definition>
        <argsstring>(Array2D&lt; elev_t &gt; &amp;dem, Array2D&lt; label_t &gt; &amp;labels, std::queue&lt; int &gt; &amp;traceQueue, std::priority_queue&lt; std::pair&lt; elev_t, int &gt;, std::vector&lt; std::pair&lt; elev_t, int &gt; &gt;, std::greater&lt; std::pair&lt; elev_t, int &gt; &gt; &gt; &amp;priorityQueue)</argsstring>
        <name>ProcessTraceQue_onepass</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; label_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::queue&lt; int &gt; &amp;</type>
          <declname>traceQueue</declname>
        </param>
        <param>
          <type>std::priority_queue&lt; std::pair&lt; elev_t, int &gt;, std::vector&lt; std::pair&lt; elev_t, int &gt; &gt;, std::greater&lt; std::pair&lt; elev_t, int &gt; &gt; &gt; &amp;</type>
          <declname>priorityQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Zhou2016.hpp" line="25" column="1" bodyfile="/z/richdem/include/richdem/depressions/Zhou2016.hpp" bodystart="25" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="Zhou2016_8hpp_1aaf45e3957d7232b1eaab176d2d77a61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::ProcessPit_onepass</definition>
        <argsstring>(elev_t c_elev, Array2D&lt; elev_t &gt; &amp;dem, Array2D&lt; label_t &gt; &amp;labels, std::queue&lt; int &gt; &amp;depressionQue, std::queue&lt; int &gt; &amp;traceQueue, std::priority_queue&lt; std::pair&lt; elev_t, int &gt;, std::vector&lt; std::pair&lt; elev_t, int &gt; &gt;, std::greater&lt; std::pair&lt; elev_t, int &gt; &gt; &gt; &amp;priorityQueue)</argsstring>
        <name>ProcessPit_onepass</name>
        <param>
          <type>elev_t</type>
          <declname>c_elev</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; label_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>std::queue&lt; int &gt; &amp;</type>
          <declname>depressionQue</declname>
        </param>
        <param>
          <type>std::queue&lt; int &gt; &amp;</type>
          <declname>traceQueue</declname>
        </param>
        <param>
          <type>std::priority_queue&lt; std::pair&lt; elev_t, int &gt;, std::vector&lt; std::pair&lt; elev_t, int &gt; &gt;, std::greater&lt; std::pair&lt; elev_t, int &gt; &gt; &gt; &amp;</type>
          <declname>priorityQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Zhou2016.hpp" line="74" column="1" bodyfile="/z/richdem/include/richdem/depressions/Zhou2016.hpp" bodystart="74" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="Zhou2016_8hpp_1a92303ebbfaabc1415420484264362e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::PriorityFlood_Zhou2016</definition>
        <argsstring>(Array2D&lt; elev_t &gt; &amp;dem)</argsstring>
        <name>PriorityFlood_Zhou2016</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>dem</declname>
        </param>
        <briefdescription>
<para>Fills all pits and removes all digital dams from a DEM, quickly. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>G. Zhou, Z. Sun, S. Fu, Richard Barnes (this implementation)</para></simplesect>
Works similarly to the Priority-Flood described by Barnes et al. (2014), but reduces the number of items which must pass through the priority queue, thus achieving greater efficiencies.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">&amp;dem</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of cell elevations</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM. Note that the <emphasis>NoData</emphasis> value is assumed to be a negative number less than any actual data value.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM.</para></listitem><listitem><para><bold>elevations</bold> contains no landscape depressions or digital dams. </para></listitem></orderedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/depressions/Zhou2016.hpp" line="127" column="1" bodyfile="/z/richdem/include/richdem/depressions/Zhou2016.hpp" bodystart="127" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1a100ea24b7ff6b3dbe060cb5f6aacadbc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int richdem::d8_masked_FlowDir</definition>
        <argsstring>(const Array2D&lt; int32_t &gt; &amp;flat_mask, const Array2D&lt; int32_t &gt; &amp;labels, const int x, const int y)</argsstring>
        <name>d8_masked_FlowDir</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>flat_mask</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Helper function to <ref refid="flat__resolution_8hpp_1ad1f33db1167def82613eb31a59dfecb7" kindref="member">d8_flow_flats()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This determines a cell&apos;s flow direction, taking into account flat membership. It is a helper function to <ref refid="flat__resolution_8hpp_1ad1f33db1167def82613eb31a59dfecb7" kindref="member">d8_flow_flats()</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flat_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask from <ref refid="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" kindref="member">resolve_flats_barnes()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;labels</parametername>
</parameternamelist>
<parameterdescription>
<para>The labels output from <ref refid="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" kindref="member">resolve_flats_barnes()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of cell </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate of cell</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The flow direction of the cell </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="42" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="42" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1ad1f33db1167def82613eb31a59dfecb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::d8_flow_flats</definition>
        <argsstring>(const Array2D&lt; int32_t &gt; &amp;flat_mask, const Array2D&lt; int32_t &gt; &amp;labels, Array2D&lt; U &gt; &amp;flowdirs)</argsstring>
        <name>d8_flow_flats</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>flat_mask</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <briefdescription>
<para>Calculates flow directions in flats. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This determines flow directions within flats which have been resolved using <ref refid="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" kindref="member">resolve_flats_barnes()</ref>.</para><para>Uses the helper function d8_masked_FlowDir()</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flat_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask from <ref refid="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" kindref="member">resolve_flats_barnes()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;labels</parametername>
</parameternamelist>
<parameterdescription>
<para>The labels output from <ref refid="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" kindref="member">resolve_flats_barnes()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns flat-resolved flow directions</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>flat_mask</bold> contains the number of increments to be applied to each cell to form a gradient which will drain the flat it is a part of.</para></listitem><listitem><para>Any cell without a local gradient has a value of NO_FLOW in flowdirs**; all other cells have defined flow directions.</para></listitem><listitem><para>If a cell is part of a flat, it has a value greater than zero in labels** indicating which flat it is a member of; otherwise, it has a value of 0.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para>Every cell whose flow direction could be resolved by this algorithm (all drainable flats) will have a defined flow direction in flowdirs**. Any cells which could not be resolved (non-drainable flats) will still be marked NO_FLOW. </para></listitem></orderedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="97" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="97" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1a6c55d113be169cf5ba99fb588174c506" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void richdem::BuildAwayGradient</definition>
        <argsstring>(const Array2D&lt; U &gt; &amp;flowdirs, Array2D&lt; int32_t &gt; &amp;flat_mask, std::deque&lt; GridCell &gt; edges, std::vector&lt; int &gt; &amp;flat_height, const Array2D&lt; int32_t &gt; &amp;labels)</argsstring>
        <name>BuildAwayGradient</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>flat_mask</declname>
        </param>
        <param>
          <type>std::deque&lt; <ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref> &gt;</type>
          <declname>edges</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>flat_height</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>Build a gradient away from the high edges of the flats. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
The queue of high-edge cells developed in find_flat_edges() is copied into the procedure. A breadth-first expansion labels cells by their distance away from terrain of higher elevation. The maximal distance encountered is noted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D array indicating each cell&apos;s flow direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;flat_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D array for storing flat_mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;edges</parametername>
</parameternamelist>
<parameterdescription>
<para>The high-edge FIFO queue from find_flat_edges() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;flat_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector with length equal to max number of labels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;labels</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array storing labels developed in label_this()</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para>Every cell in <bold>labels</bold> is marked either 0, indicating that the cell is not part of a flat, or a number greater than zero which identifies the flat to which the cell belongs.</para></listitem><listitem><para>Any cell without a local gradient is marked NO_FLOW in <bold>flowdirs</bold>.</para></listitem><listitem><para>Every cell in <bold>flat_mask</bold> is initialized to 0.</para></listitem><listitem><para><bold>edges</bold> contains, in no particular order, all the high edge cells of the DEM (those flat cells adjacent to higher terrain) which are part of drainable flats.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>flat_height</bold> will have an entry for each label value of <bold>labels</bold> indicating the maximal number of increments to be applied to the flat identified by that label.</para></listitem><listitem><para><bold>flat_mask</bold> will contain the number of increments to be applied to each cell to form a gradient away from higher terrain; cells not in a flat will have a value of 0. </para></listitem></orderedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="153" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="153" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1a647fbce811b30262d2f587699f65923a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void richdem::BuildTowardsCombinedGradient</definition>
        <argsstring>(const Array2D&lt; U &gt; &amp;flowdirs, Array2D&lt; int32_t &gt; &amp;flat_mask, std::deque&lt; GridCell &gt; edges, std::vector&lt; int &gt; &amp;flat_height, const Array2D&lt; int32_t &gt; &amp;labels)</argsstring>
        <name>BuildTowardsCombinedGradient</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>flat_mask</declname>
        </param>
        <param>
          <type>std::deque&lt; <ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref> &gt;</type>
          <declname>edges</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>flat_height</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>Builds gradient away from the low edges of flats, combines gradients. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
The queue of low-edge cells developed in find_flat_edges() is copied into the procedure. A breadth-first expansion labels cells by their distance away from terrain of lower elevation. This is combined with the gradient from BuildAwayGradient() to give the final increments of each cell in forming the flat mask.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D array indicating each cell&apos;s flow direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">&amp;flat_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D array for storing flat_mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;edges</parametername>
</parameternamelist>
<parameterdescription>
<para>The low-edge FIFO queue from find_flat_edges() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flat_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector with length equal to max number of labels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;labels</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array storing labels developed in label_this()</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para>Every cell in <bold>labels</bold> is marked either 0, indicating that the cell is not part of a flat, or a number greater than zero which identifies the flat to which the cell belongs.</para></listitem><listitem><para>Any cell without a local gradient is marked NO_FLOW in <bold>flowdirs</bold>.</para></listitem><listitem><para>Every cell in <bold>flat_mask</bold> has either a value of 0, indicating that the cell is not part of a flat, or a value greater than zero indicating the number of increments which must be added to it to form a gradient away from higher terrain.</para></listitem><listitem><para><bold>flat_height</bold> has an entry for each label value of <bold>labels</bold> indicating the maximal number of increments to be applied to the flat identified by that label in order to form the gradient away from higher terrain.</para></listitem><listitem><para><bold>edges</bold> contains, in no particular order, all the low edge cells of the DEM (those flat cells adjacent to lower terrain).</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>flat_mask</bold> will contain the number of increments to be applied to each cell to form a superposition of the gradient away from higher terrain with the gradient towards lower terrain; cells not in a flat have a value of 0. </para></listitem></orderedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="242" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="242" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1a72d8e15d118c50fa66258fb755b07bd1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void richdem::label_this</definition>
        <argsstring>(int x0, int y0, const int label, Array2D&lt; int32_t &gt; &amp;labels, const Array2D&lt; T &gt; &amp;elevations)</argsstring>
        <name>label_this</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Labels all the cells of a flat with a common label. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
Performs a flood fill operation which labels all the cells of a flat with a common label. Each flat will have a unique label</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x0</parametername>
</parameternamelist>
<parameterdescription>
<para>x-coordinate of flood fill seed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y0</parametername>
</parameternamelist>
<parameterdescription>
<para>y-coordinate of flood-fill seed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">label</parametername>
</parameternamelist>
<parameterdescription>
<para>Label to apply to the cells </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;labels</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array which will contain the labels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array of cell elevations</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM.</para></listitem><listitem><para><bold>labels</bold> has the same dimensions as <bold>elevations</bold>.</para></listitem><listitem><para>**(x0,y0)** belongs to the flat which is to be labeled.</para></listitem><listitem><para><bold>label</bold> is a unique label which has not been previously applied to a flat.</para></listitem><listitem><para><bold>labels</bold> is initialized to zero prior to the first call to this function.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para>**(x0,y0)** and every cell reachable from it by passing over only cells of the same elevation as it (all the cells in the flat to which c belongs) will be marked as <bold>label</bold> in <bold>labels</bold>. </para></listitem></orderedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="332" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="332" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1ad41f991dc7aa4aa84677f450ae1880ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void richdem::find_flat_edges</definition>
        <argsstring>(std::deque&lt; GridCell &gt; &amp;low_edges, std::deque&lt; GridCell &gt; &amp;high_edges, const Array2D&lt; U &gt; &amp;flowdirs, const Array2D&lt; T &gt; &amp;elevations)</argsstring>
        <name>find_flat_edges</name>
        <param>
          <type>std::deque&lt; <ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref> &gt; &amp;</type>
          <declname>low_edges</declname>
        </param>
        <param>
          <type>std::deque&lt; <ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref> &gt; &amp;</type>
          <declname>high_edges</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Identifies cells adjacent to higher and lower terrain. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
Cells adjacent to lower and higher terrain are identified and added to the appropriate queue</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">&amp;low_edges</parametername>
</parameternamelist>
<parameterdescription>
<para>Queue for storing cells adjacent to lower terrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;high_edges</parametername>
</parameternamelist>
<parameterdescription>
<para>Queue for storing cells adjacent to higher terrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array indicating flow direction for each cell </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array of cell elevations</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or a value <emphasis>NoData</emphasis> for cells not part of the DEM.</para></listitem><listitem><para>Any cell without a local gradient is marked NO_FLOW in <bold>flowdirs</bold>.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>high_edges</bold> will contain, in no particular order, all the high edge cells of the DEM: those flat cells adjacent to higher terrain.</para></listitem><listitem><para><bold>low_edges</bold> will contain, in no particular order, all the low edge cells of the DEM: those flat cells adjacent to lower terrain. </para></listitem></orderedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="382" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="382" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::resolve_flats_barnes</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const Array2D&lt; U &gt; &amp;flowdirs, Array2D&lt; int32_t &gt; &amp;flat_mask, Array2D&lt; int32_t &gt; &amp;labels)</argsstring>
        <name>resolve_flats_barnes</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>flat_mask</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>Performs the flat resolution by Barnes, Lehman, and Mulla. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
TODO</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array of cell elevations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array indicating flow direction of each cell </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flat_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array which will hold incremental elevation mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;labels</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array indicating flat membership</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>elevations</bold> contains the elevations of every cell or the <emphasis>NoData</emphasis> value for cells not part of the DEM.</para></listitem><listitem><para>Any cell without a local gradient is marked NO_FLOW in <bold>flowdirs</bold>.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para><bold>flat_mask</bold> will have a value greater than or equal to zero for every cell, indicating its number of increments. These can be used be used in conjunction with <bold>labels</bold> to determine flow directions without altering the DEM, or to alter the DEM in subtle ways to direct flow.</para></listitem><listitem><para><bold>labels</bold> will have values greater than or equal to 1 for every cell which is in a flat. Each flat&apos;s cells will bear a label unique to that flat. </para></listitem></orderedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="448" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="448" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1a70a55d953a8bf1ac1471d6518466f11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::d8_flats_alter_dem</definition>
        <argsstring>(const Array2D&lt; int32_t &gt; &amp;flat_mask, const Array2D&lt; int32_t &gt; &amp;labels, Array2D&lt; U &gt; &amp;elevations)</argsstring>
        <name>d8_flats_alter_dem</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>flat_mask</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
<para>Alters the elevations of the DEM so that all flats drain. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This alters elevations within the DEM so that flats which have been resolved using <ref refid="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" kindref="member">resolve_flats_barnes()</ref> will drain.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flat_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask from <ref refid="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" kindref="member">resolve_flats_barnes()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;labels</parametername>
</parameternamelist>
<parameterdescription>
<para>A grouping from <ref refid="flat__resolution_8hpp_1a5a8557edf0f7687059df9ae900ada909" kindref="member">resolve_flats_barnes()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array of elevations</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><orderedlist>
<listitem><para><bold>flat_mask</bold> contains the number of increments to be applied to each cell to form a gradient which will drain the flat it is a part of.</para></listitem><listitem><para>If a cell is part of a flat, it has a value greater than zero in labels** indicating which flat it is a member of; otherwise, it has a value of 0.</para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para><orderedlist>
<listitem><para>Every cell whose part of a flat which could be drained will have its elevation altered in such a way as to guarantee that its flat does drain. </para></listitem></orderedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="546" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="546" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution_8hpp_1a259269332eb1ec5a55d3f3636f7b2274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::barnes_flat_resolution_d8</definition>
        <argsstring>(Array2D&lt; T &gt; &amp;elevations, Array2D&lt; U &gt; &amp;flowdirs, bool alter)</argsstring>
        <name>barnes_flat_resolution_d8</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution.hpp" line="588" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution.hpp" bodystart="588" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution__dinf_8hpp_1a882f67bba074d5257fa8d18e68f139e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float richdem::dinf_masked_FlowDir</definition>
        <argsstring>(const Array2D&lt; int32_t &gt; &amp;flat_resolution_mask, const Array2D&lt; int32_t &gt; &amp;groups, const int x, const int y)</argsstring>
        <name>dinf_masked_FlowDir</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>flat_resolution_mask</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp" line="17" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp" bodystart="17" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution__dinf_8hpp_1a3b9f6eeb4bf0ef82c477d803bec85849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void richdem::dinf_flow_flats</definition>
        <argsstring>(const Array2D&lt; int32_t &gt; &amp;flat_resolution_mask, const Array2D&lt; int32_t &gt; &amp;groups, Array2D&lt; float &gt; &amp;flowdirs)</argsstring>
        <name>dinf_flow_flats</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>flat_resolution_mask</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>groups</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp" line="73" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp" bodystart="73" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="flat__resolution__dinf_8hpp_1a4242c0e9f38475bd318a92688c422fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::resolve_flats_barnes_dinf</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;flowdirs)</argsstring>
        <name>resolve_flats_barnes_dinf</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp" line="98" column="1" bodyfile="/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp" bodystart="98" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="garbrecht_8hpp_1a84977e72b433bd1eb47aa7141494ab52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void richdem::FindFlats</definition>
        <argsstring>(const Array2D&lt; uint8_t &gt; &amp;flowdirs, flat_type &amp;flats)</argsstring>
        <name>FindFlats</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type>flat_type &amp;</type>
          <declname>flats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/garbrecht.hpp" line="16" column="1" bodyfile="/z/richdem/include/richdem/flats/garbrecht.hpp" bodystart="16" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="garbrecht_8hpp_1ab886734380b47519a48d647db618ff3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::GradientTowardsLower</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const Array2D&lt; uint8_t &gt; &amp;flowdirs, flat_type &amp;flats, Array2D&lt; int32_t &gt; &amp;inc1)</argsstring>
        <name>GradientTowardsLower</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type>flat_type &amp;</type>
          <declname>flats</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>inc1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/garbrecht.hpp" line="27" column="1" bodyfile="/z/richdem/include/richdem/flats/garbrecht.hpp" bodystart="27" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="garbrecht_8hpp_1a18a272119719dd739218a2bd81f95be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::GradientAwayFromHigher</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const Array2D&lt; uint8_t &gt; &amp;flowdirs, flat_type &amp;flats, Array2D&lt; int32_t &gt; &amp;inc2)</argsstring>
        <name>GradientAwayFromHigher</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type>flat_type &amp;</type>
          <declname>flats</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>inc2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/garbrecht.hpp" line="69" column="1" bodyfile="/z/richdem/include/richdem/flats/garbrecht.hpp" bodystart="69" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="garbrecht_8hpp_1a2e7e42ccdf9057dce482822a793f242b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::CombineGradients</definition>
        <argsstring>(Array2D&lt; T &gt; &amp;elevations, const Array2D&lt; int32_t &gt; &amp;inc1, const Array2D&lt; int32_t &gt; &amp;inc2, float epsilon)</argsstring>
        <name>CombineGradients</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>inc1</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; int32_t &gt; &amp;</type>
          <declname>inc2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/garbrecht.hpp" line="116" column="1" bodyfile="/z/richdem/include/richdem/flats/garbrecht.hpp" bodystart="116" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="garbrecht_8hpp_1a071b830fbcdf061ef072da0e3503cfde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::GarbrechtAlg</definition>
        <argsstring>(Array2D&lt; T &gt; &amp;elevations, Array2D&lt; uint8_t &gt; &amp;flowdirs)</argsstring>
        <name>GarbrechtAlg</name>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/garbrecht.hpp" line="131" column="1" bodyfile="/z/richdem/include/richdem/flats/garbrecht.hpp" bodystart="131" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="d8__flowdirs_8hpp_1adcbbfcbe17eb0bbe82bc4d5b4f2b3f0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int richdem::d8_FlowDir</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y)</argsstring>
        <name>d8_FlowDir</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Calculates the D8 flow direction of a cell. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This calculates the D8 flow direction of a cell using the D8 neighbour system, as defined in utility.h. Cells on the edge of the grid flow off the nearest edge.</para><para>Helper function for <ref refid="d8__flowdirs_8hpp_1a772bed1aeafb81da6bfbc8b251526eaa" kindref="member">d8_flow_directions()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A DEM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of cell </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate of cell</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The D8 flow direction of the cell </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/d8_flowdirs.hpp" line="33" column="1" bodyfile="/z/richdem/include/richdem/flowmet/d8_flowdirs.hpp" bodystart="33" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="d8__flowdirs_8hpp_1a772bed1aeafb81da6bfbc8b251526eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::d8_flow_directions</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; U &gt; &amp;flowdirs)</argsstring>
        <name>d8_flow_directions</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <briefdescription>
<para>Calculates the D8 flow directions of a DEM. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This calculates the D8 flow directions of a DEM. Its argument &apos;flowdirs&apos; will return a grid with flow directions using the D8 neighbour system, as defined in utility.h. The choice of data type for array2d must be able to hold exact values for all neighbour identifiers (usually [-1,7]).</para><para>Uses d8_FlowDir() as a helper function.</para><para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Combine dinf and d8 neighbour systems</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A DEM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the flow direction of each cell </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/d8_flowdirs.hpp" line="97" column="1" bodyfile="/z/richdem/include/richdem/flowmet/d8_flowdirs.hpp" bodystart="97" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="dinf__flowdirs_8hpp_1ac0b5af17b6fe2fe68f80da27a7003a2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>float</type>
        <definition>static float richdem::dinf_FlowDir</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y)</argsstring>
        <name>dinf_FlowDir</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Determine the D-infinite flow direction of a cell. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Implementation by Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This function determines the D-infinite flow direction of a cell, as described by Tarboton (1997) and Barnes (2013, TODO). TODO</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D grid of elevation data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>x-coordinate of cell to determine flow direction for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>y-coordinate of cell to determine flow direction for</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A floating-point value between [0,2*Pi) indicating flow direction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" line="46" column="1" bodyfile="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" bodystart="46" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="dinf__flowdirs_8hpp_1a83d9406227c452245ed888279395e921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::dinf_flow_directions</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;flowdirs)</argsstring>
        <name>dinf_flow_directions</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <briefdescription>
<para>Determine the D-infinite flow direction of every cell in a grid. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This function runs dinf_FlowDir() on every cell in a grid which has a data value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D grid of elevation data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D grid which will contain the flow directions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" line="129" column="1" bodyfile="/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp" bodystart="129" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="Fairfield1991_8hpp_1a8e056e4603223ce83609a422df0ce7ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; richdem::FM_FairfieldLeymarie</definition>
        <argsstring>(const Array2D&lt; E &gt; &amp;elevations)</argsstring>
        <name>FM_FairfieldLeymarie</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/Fairfield1991.hpp" line="12" column="1" bodyfile="/z/richdem/include/richdem/flowmet/Fairfield1991.hpp" bodystart="12" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="Fairfield1991_8hpp_1aa64beb4138bfab7b1a6e4672477aceb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; richdem::FM_Rho8</definition>
        <argsstring>(const Array2D&lt; E &gt; &amp;elevations)</argsstring>
        <name>FM_Rho8</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/Fairfield1991.hpp" line="68" column="1" bodyfile="/z/richdem/include/richdem/flowmet/Fairfield1991.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="Freeman1991_8hpp_1a93f1965e7f678f91e3c5fd39c47b9f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; richdem::FM_Freeman</definition>
        <argsstring>(const Array2D&lt; E &gt; &amp;elevations, const double xparam)</argsstring>
        <name>FM_Freeman</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>xparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/Freeman1991.hpp" line="11" column="1" bodyfile="/z/richdem/include/richdem/flowmet/Freeman1991.hpp" bodystart="11" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="Holmgren1994_8hpp_1a8c114e2bc29c4982db0435b8dd6ec019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; richdem::FM_Holmgren</definition>
        <argsstring>(const Array2D&lt; E &gt; &amp;elevations, const double xparam)</argsstring>
        <name>FM_Holmgren</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>xparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/Holmgren1994.hpp" line="11" column="1" bodyfile="/z/richdem/include/richdem/flowmet/Holmgren1994.hpp" bodystart="11" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="OCallaghan1984_8hpp_1a19ea4f5553e696990c4db8e45bee6376" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>static std::vector&lt;float&gt; richdem::FM_OCallaghan</definition>
        <argsstring>(const Array2D&lt; E &gt; &amp;elevations)</argsstring>
        <name>FM_OCallaghan</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/OCallaghan1984.hpp" line="12" column="1" bodyfile="/z/richdem/include/richdem/flowmet/OCallaghan1984.hpp" bodystart="12" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="OCallaghan1984_8hpp_1a786d01b6fc89d1b24c4badaec4df6f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; richdem::FM_D8</definition>
        <argsstring>(const Array2D&lt; E &gt; &amp;elevations)</argsstring>
        <name>FM_D8</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/OCallaghan1984.hpp" line="62" column="1" bodyfile="/z/richdem/include/richdem/flowmet/OCallaghan1984.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="Quinn1991_8hpp_1a965bdc9025d5e24eebf22e39f272e904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; richdem::FM_Quinn</definition>
        <argsstring>(const Array2D&lt; E &gt; &amp;elevations)</argsstring>
        <name>FM_Quinn</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/Quinn1991.hpp" line="11" column="1" bodyfile="/z/richdem/include/richdem/flowmet/Quinn1991.hpp" bodystart="11" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="Tarboton1997_8hpp_1ad74b4687c61f7fd7aada66236b066bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; richdem::FM_Tarboton</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations)</argsstring>
        <name>FM_Tarboton</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/Tarboton1997.hpp" line="11" column="1" bodyfile="/z/richdem/include/richdem/flowmet/Tarboton1997.hpp" bodystart="11" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="Tarboton1997_8hpp_1a976cb8a427945a60cdf5436bc7728178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; richdem::FM_Dinfinity</definition>
        <argsstring>(const Array2D&lt; E &gt; &amp;elevations)</argsstring>
        <name>FM_Dinfinity</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flowmet/Tarboton1997.hpp" line="131" column="1" bodyfile="/z/richdem/include/richdem/flowmet/Tarboton1997.hpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="d8__methods_8hpp_1a1f7bab20d02164b4e0a58fb6a61c68ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T richdem::sgn</definition>
        <argsstring>(T val)</argsstring>
        <name>sgn</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Returns the sign (+1, -1, 0) of a number. Branchless. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>Input value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 for a negative input, +1 for a positive input, and 0 for a zero input </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/d8_methods.hpp" line="31" column="1" bodyfile="/z/richdem/include/richdem/methods/d8_methods.hpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="d8__methods_8hpp_1aa90662f12d76a3974eb32771ab539fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::d8_flow_accum</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;flowdirs, Array2D&lt; U &gt; &amp;area)</argsstring>
        <name>d8_flow_accum</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>area</declname>
        </param>
        <briefdescription>
<para>Calculates the D8 flow accumulation, given the D8 flow directions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
This calculates the D8 flow accumulation of a grid of D8 flow directions by calculating each cell&apos;s dependency on its neighbours and then using a priority-queue to process cells in a top-of-the-watershed-down fashion</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>A D8 flowdir grid from <ref refid="d8__flowdirs_8hpp_1a772bed1aeafb81da6bfbc8b251526eaa" kindref="member">d8_flow_directions()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;area</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the up-slope area of each cell </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/d8_methods.hpp" line="48" column="1" bodyfile="/z/richdem/include/richdem/methods/d8_methods.hpp" bodystart="48" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="d8__methods_8hpp_1a2dd58065d62dde9a437d47d568eb1d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::d8_upslope_cells</definition>
        <argsstring>(int x0, int y0, int x1, int y1, const Array2D&lt; T &gt; &amp;flowdirs, Array2D&lt; U &gt; &amp;upslope_cells)</argsstring>
        <name>d8_upslope_cells</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>upslope_cells</declname>
        </param>
        <briefdescription>
<para>Calculates which cells ultimately D8-flow through a given cell. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
Given the coordinates x0,y0 of a cell and x1,y1 of another, possibly distinct, cell this draws a line between the two using the Bresenham Line-Drawing Algorithm and returns a grid showing all the cells whose flow ultimately passes through the indicated cells.</para><para>The grid has the values:</para><para>1=Upslope cell 2=Member of initializing line All other cells have a noData() value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x0</parametername>
</parameternamelist>
<parameterdescription>
<para>x-coordinate of start of line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y0</parametername>
</parameternamelist>
<parameterdescription>
<para>y-coordinate of start of line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x1</parametername>
</parameternamelist>
<parameterdescription>
<para>x-coordinate of end of line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y1</parametername>
</parameternamelist>
<parameterdescription>
<para>y-coordinate of end of line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>A D8 flowdir grid from <ref refid="d8__flowdirs_8hpp_1a772bed1aeafb81da6bfbc8b251526eaa" kindref="member">d8_flow_directions()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;upslope_cells</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of 1/2/NoData, as in the description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/d8_methods.hpp" line="168" column="1" bodyfile="/z/richdem/include/richdem/methods/d8_methods.hpp" bodystart="168" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="dinf__methods_8hpp_1a0c170e3d0dc54db27b32148a2e464cc8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void richdem::where_do_i_flow</definition>
        <argsstring>(float flowdir, int &amp;nhigh, int &amp;nlow)</argsstring>
        <name>where_do_i_flow</name>
        <param>
          <type>float</type>
          <declname>flowdir</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nhigh</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nlow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/dinf_methods.hpp" line="54" column="1" bodyfile="/z/richdem/include/richdem/methods/dinf_methods.hpp" bodystart="54" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="dinf__methods_8hpp_1a5313cab0a6fbec83f58684c91326a764" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void richdem::area_proportion</definition>
        <argsstring>(float flowdir, int nhigh, int nlow, float &amp;phigh, float &amp;plow)</argsstring>
        <name>area_proportion</name>
        <param>
          <type>float</type>
          <declname>flowdir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nhigh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nlow</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>phigh</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>plow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/dinf_methods.hpp" line="79" column="1" bodyfile="/z/richdem/include/richdem/methods/dinf_methods.hpp" bodystart="79" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="dinf__methods_8hpp_1af706b9527873b98d6d80516197370b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::dinf_upslope_area</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;flowdirs, Array2D&lt; U &gt; &amp;area)</argsstring>
        <name>dinf_upslope_area</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>flowdirs</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>area</declname>
        </param>
        <briefdescription>
<para>Calculate each cell&apos;s D-infinity flow accumulation value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Tarboton (1997), Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
TODO</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flowdirs</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of D-infinite flow directions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;area</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid of flow accumulation values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/dinf_methods.hpp" line="117" column="1" bodyfile="/z/richdem/include/richdem/methods/dinf_methods.hpp" bodystart="117" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation_8hpp_1ab7c86015416fd1cf7cea2f1509cbb9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
          <param>
            <type>class accum_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FA_Tarboton</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; accum_t &gt; &amp;accum)</argsstring>
        <name>FA_Tarboton</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; accum_t &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation.hpp" line="16" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation_8hpp_1ae6b0c8742e32e4967eba0f6c327116a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
          <param>
            <type>class accum_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FA_Holmgren</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; accum_t &gt; &amp;accum, double xparam)</argsstring>
        <name>FA_Holmgren</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; accum_t &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation.hpp" line="17" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation.hpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation_8hpp_1a67de1a89d71ae378c79d0afd6bf30f01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
          <param>
            <type>class accum_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FA_Quinn</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; accum_t &gt; &amp;accum)</argsstring>
        <name>FA_Quinn</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; accum_t &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation.hpp" line="18" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation_8hpp_1ae9e31814f3ef797c0c36193f659a7327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
          <param>
            <type>class accum_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FA_Freeman</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; accum_t &gt; &amp;accum, double xparam)</argsstring>
        <name>FA_Freeman</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; accum_t &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation.hpp" line="19" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation_8hpp_1ad6e05dcb39fa23516278e7d561c78c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
          <param>
            <type>class accum_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FA_FairfieldLeymarie</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; accum_t &gt; &amp;accum)</argsstring>
        <name>FA_FairfieldLeymarie</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; accum_t &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation.hpp" line="20" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation_8hpp_1a4d64ffa0ccb1e7bbcaa2bff3298e71b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
          <param>
            <type>class accum_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FA_Rho8</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; accum_t &gt; &amp;accum)</argsstring>
        <name>FA_Rho8</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; accum_t &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation.hpp" line="21" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation.hpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation_8hpp_1a6e54e7375df2a8e8e62234cca6af3575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
          <param>
            <type>class accum_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FA_D8</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; accum_t &gt; &amp;accum)</argsstring>
        <name>FA_D8</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; accum_t &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation.hpp" line="22" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation_8hpp_1a165f050f771b9ac1dd60db1c683be1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class elev_t</type>
          </param>
          <param>
            <type>class accum_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FA_OCallaghan</definition>
        <argsstring>(const Array2D&lt; elev_t &gt; &amp;elevations, Array2D&lt; accum_t &gt; &amp;accum)</argsstring>
        <name>FA_OCallaghan</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; elev_t &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; accum_t &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation.hpp" line="23" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="flow__accumulation__generic_8hpp_1a3e96f80e3da908f05e64c7fbf0ef6f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class E</type>
          </param>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::FlowAccumulation</definition>
        <argsstring>(F func, const Array2D&lt; E &gt; &amp;elevations, Array2D&lt; A &gt; &amp;accum, Args... args)</argsstring>
        <name>FlowAccumulation</name>
        <param>
          <type>F</type>
          <declname>func</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; E &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; A &gt; &amp;</type>
          <declname>accum</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/flow_accumulation_generic.hpp" line="12" column="1" bodyfile="/z/richdem/include/richdem/methods/flow_accumulation_generic.hpp" bodystart="12" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1ae17d858f447605abdc7929ca1906419d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_SPI</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;flow_accumulation, const Array2D&lt; U &gt; &amp;riserun_slope, Array2D&lt; V &gt; &amp;result)</argsstring>
        <name>TA_SPI</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>flow_accumulation</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>riserun_slope</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; V &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Calculates the SPI terrain attribute. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
<formula id="0">$(\textit{CellSize}\cdot\textit{FlowAccumulation}+0.001)\cdot(\frac{1}{100}\textit{PercentSlope}+0.001)$</formula></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flow_accumulation</parametername>
</parameternamelist>
<parameterdescription>
<para>A flow accumulation grid (<ref refid="dinf__methods_8hpp_1af706b9527873b98d6d80516197370b84" kindref="member">dinf_upslope_area()</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;riserun_slope</parametername>
</parameternamelist>
<parameterdescription>
<para>A percent_slope grid (d8_slope()) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;result</parametername>
</parameternamelist>
<parameterdescription>
<para>Altered to return the calculated SPI</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>flow_accumulation</computeroutput> and <computeroutput>percent_slope</computeroutput> must be the same size</para></simplesect>
<simplesect kind="post"><para><computeroutput>result</computeroutput> takes the properties and dimensions of <computeroutput>flow_accumulation</computeroutput> </para></simplesect>
<xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>Generalize for float and int grids </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="30" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="30" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a057680886519f909fdd30616f7ad2852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_CTI</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;flow_accumulation, const Array2D&lt; U &gt; &amp;riserun_slope, Array2D&lt; V &gt; &amp;result)</argsstring>
        <name>TA_CTI</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>flow_accumulation</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; U &gt; &amp;</type>
          <declname>riserun_slope</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; V &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Calculates the CTI terrain attribute. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>)</para></simplesect>
<formula id="1">$\log{\frac{\textit{CellSize}\cdot\textit{FlowAccumulation}+0.001}{\frac{1}{100}\textit{PercentSlope}+0.001}}$</formula></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;flow_accumulation</parametername>
</parameternamelist>
<parameterdescription>
<para>A flow accumulation grid (<ref refid="dinf__methods_8hpp_1af706b9527873b98d6d80516197370b84" kindref="member">dinf_upslope_area()</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;riserun_slope</parametername>
</parameternamelist>
<parameterdescription>
<para>A percent_slope grid (d8_slope()) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;result</parametername>
</parameternamelist>
<parameterdescription>
<para>Altered to return the calculated SPI</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>flow_accumulation</computeroutput> and <computeroutput>percent_slope</computeroutput> must be the same size</para></simplesect>
<simplesect kind="post"><para><computeroutput>result</computeroutput> takes the properties and dimensions of <computeroutput>flow_accumulation</computeroutput> </para></simplesect>
<xrefsect id="todo_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>Generalize for float and int grids </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="82" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="82" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1aa4af62fd3b2c7bbff41353fa4e952b84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classrichdem_1_1TA__Setup__Vars" kindref="compound">TA_Setup_Vars</ref></type>
        <definition>static TA_Setup_Vars richdem::TerrainSetup</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>TerrainSetup</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="181" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="181" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a389c1aeae587927872fb900478d562be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classrichdem_1_1TA__Setup__Curves__Vars" kindref="compound">TA_Setup_Curves_Vars</ref></type>
        <definition>static TA_Setup_Curves_Vars richdem::TerrainCurvatureSetup</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>TerrainCurvatureSetup</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="207" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="207" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a091eda92d4100f76c60d701fc024c629" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double richdem::Terrain_Aspect</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>Terrain_Aspect</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
<para>Calculates aspect in degrees in the manner of Horn 1981. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Aspect in degrees in the manner of Horn 1981 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="230" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="230" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1ae4942bbc10662f45176318d149e22f0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double richdem::Terrain_Slope_RiseRun</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>Terrain_Slope_RiseRun</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
<para>Calculates the rise/run slope along the maximum gradient on a fitted surface over a 3x3 be neighbourhood in the manner of Horn 1981. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Rise/run slope </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="248" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="248" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a632772003cefd5988dcaf91f23e5a1ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double richdem::Terrain_Curvature</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>Terrain_Curvature</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="261" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a30321c3aa2e68863ff3e9374d7d71f70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double richdem::Terrain_Planform_Curvature</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>Terrain_Planform_Curvature</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="268" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="268" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1ac66bbf9922607da5b3985eabd6140052" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double richdem::Terrain_Profile_Curvature</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>Terrain_Profile_Curvature</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="278" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="278" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1aec35c6fb3ef33d8b0b3421a4df9554e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double richdem::Terrain_Slope_Percent</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>Terrain_Slope_Percent</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="288" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a8eeb881ca6998b797a91f1af07a1937b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double richdem::Terrain_Slope_Radian</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>Terrain_Slope_Radian</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="293" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="293" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1aee0d47cd0e0d387456f2a577010b3a3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double richdem::Terrain_Slope_Degree</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, const int x, const int y, const float zscale)</argsstring>
        <name>Terrain_Slope_Degree</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="298" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="298" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1aef29f8d44e767e34722691e255ff5fc5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void richdem::TerrainProcessor</definition>
        <argsstring>(F func, const Array2D&lt; T &gt; &amp;elevations, const float zscale, Array2D&lt; float &gt; &amp;output)</argsstring>
        <name>TerrainProcessor</name>
        <param>
          <type>F</type>
          <declname>func</declname>
        </param>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zscale</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Calculate a variety of terrain attributes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Burrough (1998)</para></simplesect>
This calculates a variety of terrain attributes according to the work of Burrough 1998&apos;s &quot;Principles of Geographical
Information Systems&quot; (p. 190). This function calls d8_terrain_attrib_helper to calculate the actual attributes. This function may perform some post-processing (such as on slope), but it&apos;s purpose is essentially to just scan the grid and pass off the work to d8_terrain_attrib_helper().</para><para>Possible attribute values are <itemizedlist>
<listitem>
<para>TATTRIB_CURVATURE </para></listitem>
<listitem>
<para>TATTRIB_PLANFORM_CURVATURE </para></listitem>
<listitem>
<para>TATTRIB_PROFILE_CURVATURE </para></listitem>
<listitem>
<para>TATTRIB_ASPECT </para></listitem>
<listitem>
<para>TATTRIB_SLOPE_RISERUN </para></listitem>
<listitem>
<para>TATTRIB_SLOPE_PERCENT </para></listitem>
<listitem>
<para>TATTRIB_SLOPE_RADIAN </para></listitem>
<listitem>
<para>TATTRIB_SLOPE_DEGREE </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute function to be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>Value by which to scale elevation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;output</parametername>
</parameternamelist>
<parameterdescription>
<para>A grid to hold the results</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>output</computeroutput> takes the properties and dimensions of <computeroutput>elevations</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="336" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="336" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a2f3cbc8ced0233f9cb64dd6ae417bde5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_slope_riserun</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;slopes, float zscale=1.0f)</argsstring>
        <name>TA_slope_riserun</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>slopes</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zscale</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>Calculates the slope as rise/run. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Horn (1981)</para></simplesect>
Calculates the slope using Horn 1981, as per Burrough 1998&apos;s &quot;Principles of Geographical Information Systems&quot; (p. 190)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;slopes</parametername>
</parameternamelist>
<parameterdescription>
<para>A slope grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>DEM is scaled by this factor prior to calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="370" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="370" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1aa0350fbe14d3fbdf30a7e42ee2218441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_slope_percentage</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;slopes, float zscale=1.0f)</argsstring>
        <name>TA_slope_percentage</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>slopes</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zscale</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>Calculates the slope as percentage. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Horn (1981)</para></simplesect>
Calculates the slope using Horn 1981, as per Burrough 1998&apos;s &quot;Principles of Geographical Information Systems&quot; (p. 190)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;slopes</parametername>
</parameternamelist>
<parameterdescription>
<para>A slope grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>DEM is scaled by this factor prior to calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="392" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="392" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a4168b7d6d004c018b7d9477def7ab98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_slope_degrees</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;slopes, float zscale=1.0f)</argsstring>
        <name>TA_slope_degrees</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>slopes</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zscale</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>Calculates the slope as degrees. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Horn (1981)</para></simplesect>
Calculates the slope using Horn 1981, as per Burrough 1998&apos;s &quot;Principles of Geographical Information Systems&quot; (p. 190)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;slopes</parametername>
</parameternamelist>
<parameterdescription>
<para>A slope grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>DEM is scaled by this factor prior to calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="414" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="414" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1ab9f35aac2cc04ba33c1871367414652e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_slope_radians</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;slopes, float zscale=1.0f)</argsstring>
        <name>TA_slope_radians</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>slopes</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zscale</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>Calculates the slope as radians. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Horn (1981)</para></simplesect>
Calculates the slope using Horn 1981, as per Burrough 1998&apos;s &quot;Principles of Geographical Information Systems&quot; (p. 190)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;slopes</parametername>
</parameternamelist>
<parameterdescription>
<para>A slope grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>DEM is scaled by this factor prior to calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="436" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="436" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a47c31e2e2b5d314fb050c4bc0afdbbda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_aspect</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;aspects, float zscale=1.0f)</argsstring>
        <name>TA_aspect</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>aspects</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zscale</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>Calculates the terrain aspect. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Horn (1981)</para></simplesect>
Calculates the aspect per Horn 1981, as described by Burrough 1998&apos;s &quot;Principles of Geographical Information Systems&quot; (p. 190) The value return is in Degrees.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;aspects</parametername>
</parameternamelist>
<parameterdescription>
<para>An aspect grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>DEM is scaled by this factor prior to calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="459" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="459" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1a831078da69f8bf6dc1533acc0ead2470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_curvature</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;curvatures, float zscale=1.0f)</argsstring>
        <name>TA_curvature</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>curvatures</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zscale</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>Calculates the terrain curvature per Zevenbergen and Thorne 1987. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Horn (1981)</para></simplesect>
Calculates the curvature per Zevenbergen and Thorne 1987, as described by Burrough 1998&apos;s &quot;Principles of Geographical Information Systems&quot; (p. 190)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;curvatures</parametername>
</parameternamelist>
<parameterdescription>
<para>A curvature grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>DEM is scaled by this factor prior to calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="481" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="481" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1ac068fabf6609f914e8f3ac34f6637492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_planform_curvature</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;planform_curvatures, float zscale=1.0f)</argsstring>
        <name>TA_planform_curvature</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>planform_curvatures</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zscale</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>Calculates the terrain planform curvature per Zevenbergen and Thorne 1987. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Horn (1981)</para></simplesect>
Calculates the curvature per Zevenbergen and Thorne 1987, as described by Burrough 1998&apos;s &quot;Principles of Geographical Information Systems&quot; (p. 190)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;planform_curvatures</parametername>
</parameternamelist>
<parameterdescription>
<para>A planform curvature grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>DEM is scaled by this factor prior to calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="504" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="504" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="terrain__attributes_8hpp_1aed30c91f33bbfc1d27a7b982c8bdbd3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void richdem::TA_profile_curvature</definition>
        <argsstring>(const Array2D&lt; T &gt; &amp;elevations, Array2D&lt; float &gt; &amp;profile_curvatures, float zscale=1.0f)</argsstring>
        <name>TA_profile_curvature</name>
        <param>
          <type>const <ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; T &gt; &amp;</type>
          <declname>elevations</declname>
        </param>
        <param>
          <type><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D</ref>&lt; float &gt; &amp;</type>
          <declname>profile_curvatures</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zscale</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>Calculates the terrain profile curvature per Zevenbergen and Thorne 1987. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), Horn (1981)</para></simplesect>
Calculates the curvature per Zevenbergen and Thorne 1987, as described by Burrough 1998&apos;s &quot;Principles of Geographical Information Systems&quot; (p. 190)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">&amp;elevations</parametername>
</parameternamelist>
<parameterdescription>
<para>An elevation grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">&amp;profile_curvatures</parametername>
</parameternamelist>
<parameterdescription>
<para>A profile curvature grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zscale</parametername>
</parameternamelist>
<parameterdescription>
<para>DEM is scaled by this factor prior to calculation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/methods/terrain_attributes.hpp" line="526" column="1" bodyfile="/z/richdem/include/richdem/methods/terrain_attributes.hpp" bodystart="526" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="richdem_8cpp_1a5fefd232c677b809c8733478551fbb3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void richdem::RDLOGfunc</definition>
        <argsstring>(LogFlag flag, const char *file, const char *func, unsigned line, std::string msg)</argsstring>
        <name>RDLOGfunc</name>
        <param>
          <type>LogFlag</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/richdem.cpp" line="36" column="1" bodyfile="/z/richdem/include/richdem/richdem.cpp" bodystart="36" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="A2Array2D_8hpp_1a7635774696a85a2c88c4dab6798d886e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GDALDataType</type>
        <definition>GDALDataType richdem::peekLayoutType</definition>
        <argsstring>(const std::string &amp;layout_filename)</argsstring>
        <name>peekLayoutType</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>layout_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/tiled/A2Array2D.hpp" line="17" column="1" bodyfile="/z/richdem/include/richdem/tiled/A2Array2D.hpp" bodystart="17" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="A2Array2D_8hpp_1a8fb32d8395b1bc2b01c3b8e1ca80cab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int richdem::peekLayoutTileSize</definition>
        <argsstring>(const std::string &amp;layout_filename)</argsstring>
        <name>peekLayoutTileSize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>layout_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/tiled/A2Array2D.hpp" line="41" column="1" bodyfile="/z/richdem/include/richdem/tiled/A2Array2D.hpp" bodystart="41" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/z/richdem/include/richdem/common/Array2D.hpp" line="35" column="1"/>
  </compounddef>
</doxygen>
