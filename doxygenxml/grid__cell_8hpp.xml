<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="grid__cell_8hpp" kind="file" language="C++">
    <compoundname>grid_cell.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">queue</includes>
    <includes local="no">cmath</includes>
    <includedby refid="Barnes2014_8hpp" local="yes">/z/richdem/include/richdem/depressions/Barnes2014.hpp</includedby>
    <includedby refid="Lindsay2016_8hpp" local="yes">/z/richdem/include/richdem/depressions/Lindsay2016.hpp</includedby>
    <includedby refid="flat__resolution_8hpp" local="yes">/z/richdem/include/richdem/flats/flat_resolution.hpp</includedby>
    <includedby refid="garbrecht_8hpp" local="yes">/z/richdem/include/richdem/flats/garbrecht.hpp</includedby>
    <includedby refid="d8__methods_8hpp" local="yes">/z/richdem/include/richdem/methods/d8_methods.hpp</includedby>
    <includedby refid="dinf__methods_8hpp" local="yes">/z/richdem/include/richdem/methods/dinf_methods.hpp</includedby>
    <includedby refid="richdem_8hpp" local="yes">/z/richdem/include/richdem/richdem.hpp</includedby>
    <incdepgraph>
      <node id="129">
        <label>queue</label>
      </node>
      <node id="130">
        <label>cmath</label>
      </node>
      <node id="128">
        <label>vector</label>
      </node>
      <node id="127">
        <label>/z/richdem/include/richdem/common/grid_cell.hpp</label>
        <link refid="grid__cell_8hpp"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="139">
        <label>/z/richdem/include/richdem/methods/d8_methods.hpp</label>
        <link refid="d8__methods_8hpp"/>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>/z/richdem/include/richdem/depressions/depressions.hpp</label>
        <link refid="depressions_8hpp_source"/>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp</label>
        <link refid="flat__resolution__dinf_8hpp"/>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>/z/richdem/include/richdem/methods/dinf_methods.hpp</label>
        <link refid="dinf__methods_8hpp"/>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>/z/richdem/include/richdem/depressions/Lindsay2016.hpp</label>
        <link refid="Lindsay2016_8hpp_source"/>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>/z/richdem/include/richdem/flats/garbrecht.hpp</label>
        <link refid="garbrecht_8hpp_source"/>
      </node>
      <node id="136">
        <label>/z/richdem/include/richdem/flats/flat_resolution.hpp</label>
        <link refid="flat__resolution_8hpp"/>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>/z/richdem/include/richdem/richdem.hpp</label>
        <link refid="richdem_8hpp_source"/>
      </node>
      <node id="132">
        <label>/z/richdem/include/richdem/depressions/Barnes2014.hpp</label>
        <link refid="Barnes2014_8hpp"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>/z/richdem/include/richdem/common/grid_cell.hpp</label>
        <link refid="grid__cell_8hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classrichdem_1_1GridCell" prot="public">richdem::GridCell</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZ" prot="public">richdem::GridCellZ</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZ_3_01double_01_4" prot="public">richdem::GridCellZ&lt; double &gt;</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZ_3_01float_01_4" prot="public">richdem::GridCellZ&lt; float &gt;</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZk" prot="public">richdem::GridCellZk</innerclass>
    <innerclass refid="classrichdem_1_1GridCellZk__pq" prot="public">richdem::GridCellZk_pq</innerclass>
    <innernamespace refid="namespacerichdem">richdem</innernamespace>
    <briefdescription>
<para>Defines structures for addressing grid cells and associated queues. </para>    </briefdescription>
    <detaileddescription>
<para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), 2015 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#ifndef<sp/>_richdem_grid_hpp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_richdem_grid_hpp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerichdem" kindref="compound">richdem</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classrichdem_1_1GridCell" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19" refid="classrichdem_1_1GridCell_1ad0720d4f9d57365fc5abe3f4f63e32c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1ad0720d4f9d57365fc5abe3f4f63e32c9" kindref="member">x</ref>;<sp/></highlight></codeline>
<codeline lineno="20" refid="classrichdem_1_1GridCell_1acdf9ef83d894321472076b7562356485" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1acdf9ef83d894321472076b7562356485" kindref="member">y</ref>;<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1GridCell_1aa4919ca2a8fbd0faffb2303ff8cd0eec" kindref="member">GridCell</ref>(){}</highlight></codeline>
<codeline lineno="24" refid="classrichdem_1_1GridCell_1af7bb9c5f4a4721bc12899c5825283f70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1GridCell_1af7bb9c5f4a4721bc12899c5825283f70" kindref="member">GridCell</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y):x(x),y(y){}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>elev_t&gt;</highlight></codeline>
<codeline lineno="30" refid="classrichdem_1_1GridCellZ" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" refkind="member"><highlight class="normal"><sp/><sp/>elev_t<sp/><ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1ad0720d4f9d57365fc5abe3f4f63e32c9" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1acdf9ef83d894321472076b7562356485" kindref="member">y</ref>,<sp/>elev_t<sp/>z):<sp/><ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref>(x,y),<sp/>z(z)<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>(){}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Add<sp/>tests<sp/>of<sp/>isnan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z&gt;a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="41" refid="classrichdem_1_1GridCellZ_3_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt;double&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1ad0720d4f9d57365fc5abe3f4f63e32c9" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1acdf9ef83d894321472076b7562356485" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z):<sp/><ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref>(x,y),<sp/>z(z)<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>(){}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Add<sp/>tests<sp/>of<sp/>isnan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(const<sp/>GridCellZ&lt;double&gt;&amp;<sp/>a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/>!std::isnan(a.z))<sp/>||<sp/>z&lt;<sp/>a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ_3_01double_01_4" kindref="compound">GridCellZ&lt;double&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>))<sp/>||<sp/>z&gt;<sp/>a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ_3_01double_01_4" kindref="compound">GridCellZ&lt;double&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>))<sp/>||<sp/>(!std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>))<sp/>||<sp/>z&gt;=a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(const<sp/>GridCellZ&lt;double&gt;&amp;<sp/>a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>))<sp/>||<sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/>!std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>))<sp/>||<sp/>z&lt;=a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ_3_01double_01_4" kindref="compound">GridCellZ&lt;double&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>))<sp/>||<sp/>z==a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ_3_01double_01_4" kindref="compound">GridCellZ&lt;double&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>))<sp/>&amp;&amp;<sp/>z!=a.<ref refid="classrichdem_1_1GridCellZ_3_01double_01_4_1a01ce418293fb7cb1484530eed55d235e" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="57" refid="classrichdem_1_1GridCellZ_3_01float_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt;float&gt;:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1ad0720d4f9d57365fc5abe3f4f63e32c9" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1acdf9ef83d894321472076b7562356485" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z):<sp/><ref refid="classrichdem_1_1GridCell" kindref="compound">GridCell</ref>(x,y),<sp/>z(z)<sp/>{}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>(){}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Add<sp/>tests<sp/>of<sp/>isnan</highlight></codeline>
<codeline lineno="64" refid="classrichdem_1_1GridCellZ_3_01float_01_4_1aa48cf65ae3ba56b52ae6ecb616f8b287" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(const<sp/>GridCellZ&lt;float&gt;&amp;<sp/>a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/>!std::isnan(a.z))<sp/>||<sp/>z&lt;<sp/>a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ_3_01float_01_4" kindref="compound">GridCellZ&lt;float&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>))<sp/>||<sp/>z&gt;<sp/>a.<ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ_3_01float_01_4" kindref="compound">GridCellZ&lt;float&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>))<sp/>||<sp/>(!std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>))<sp/>||<sp/>z&gt;=a.<ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(const<sp/>GridCellZ&lt;float&gt;&amp;<sp/>a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>))<sp/>||<sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/>!std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>))<sp/>||<sp/>z&lt;=a.<ref refid="classrichdem_1_1GridCellZ_3_01float_01_4_1a0b9dea9ad9c31e275b0f350ae4e1fa7d" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GridCellZ&lt;float&gt;&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.z))<sp/>||<sp/>z==a.z;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GridCellZ&lt;float&gt;&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(std::isnan(z)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.z))<sp/>&amp;&amp;<sp/>z!=a.z;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>elev_t&gt;</highlight></codeline>
<codeline lineno="75" refid="classrichdem_1_1GridCellZk" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrichdem_1_1GridCellZk" kindref="compound">GridCellZk</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt;elev_t&gt;<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classrichdem_1_1GridCellZk_1a725237c625279ecc2d16aab758b7bbe0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZk_1a725237c625279ecc2d16aab758b7bbe0" kindref="member">k</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrichdem_1_1GridCellZk" kindref="compound">GridCellZk</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1ad0720d4f9d57365fc5abe3f4f63e32c9" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1acdf9ef83d894321472076b7562356485" kindref="member">y</ref>,<sp/>elev_t<sp/>z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k):<sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ</ref>&lt;elev_t&gt;(x,y,z),<sp/>k(k)<sp/>{}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrichdem_1_1GridCellZk" kindref="compound">GridCellZk</ref>(){}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Is<sp/>it<sp/>possible<sp/>to<sp/>do<sp/>this<sp/>relying<sp/>on<sp/>inheriting<sp/>the<sp/>std::isnan<sp/>checks<sp/>from<sp/>the<sp/>GridCellZ<sp/>specialization?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(const<sp/>GridCellZk&lt;elev_t&gt;&amp;<sp/>a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;::z</ref>&lt;<sp/>a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref><sp/>||<sp/>(<sp/>std::isnan(<ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;::z</ref>)<sp/>&amp;&amp;<sp/>!std::isnan(a.z))<sp/>||<sp/>(<ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;::z</ref>==a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref><sp/>&amp;&amp;<sp/>k&lt;a.k)<sp/>||<sp/>(std::isnan(<ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;::z</ref>)<sp/>&amp;&amp;<sp/>std::isnan(a.z)<sp/>&amp;&amp;<sp/>k&lt;a.k);<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZk" kindref="compound">GridCellZk&lt;elev_t&gt;</ref>&amp;<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;::z</ref>&gt;<sp/>a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref><sp/>||<sp/>(!std::isnan(<ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;::z</ref>)<sp/>&amp;&amp;<sp/><sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref>))<sp/>||<sp/>(<ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;::z</ref>==a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref><sp/>&amp;&amp;<sp/>k&gt;a.<ref refid="classrichdem_1_1GridCellZk_1a725237c625279ecc2d16aab758b7bbe0" kindref="member">k</ref>)<sp/>||<sp/>(std::isnan(<ref refid="classrichdem_1_1GridCellZ" kindref="compound">GridCellZ&lt;elev_t&gt;::z</ref>)<sp/>&amp;&amp;<sp/>std::isnan(a.<ref refid="classrichdem_1_1GridCellZ_1af493b78909ba0172fced847becafbb5a" kindref="member">z</ref>)<sp/>&amp;&amp;<sp/>k&gt;a.<ref refid="classrichdem_1_1GridCellZk_1a725237c625279ecc2d16aab758b7bbe0" kindref="member">k</ref>);<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>elev_t&gt;</highlight></codeline>
<codeline lineno="91" refid="grid__cell_8hpp_1a92b6e4f23debefdfceb2d3f8cc4d85c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="grid__cell_8hpp_1a92b6e4f23debefdfceb2d3f8cc4d85c6" kindref="member">GridCellZ_pq</ref><sp/>=<sp/>std::priority_queue&lt;GridCellZ&lt;elev_t&gt;,<sp/>std::vector&lt;GridCellZ&lt;elev_t&gt;<sp/>&gt;,<sp/>std::greater&lt;GridCellZ&lt;elev_t&gt;<sp/>&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96" refid="classrichdem_1_1GridCellZk__pq" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrichdem_1_1GridCellZk__pq" kindref="compound">GridCellZk_pq</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::priority_queue&lt;GridCellZk&lt;T&gt;,<sp/>std::vector&lt;<sp/>GridCellZk&lt;T&gt;<sp/>&gt;,<sp/>std::greater&lt;GridCellZk&lt;T&gt;<sp/>&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>uint64_t<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push(){<sp/></highlight><highlight class="comment">//TODO:<sp/>Is<sp/>there<sp/>a<sp/>way<sp/>to<sp/>stop<sp/>compilation,<sp/>but<sp/>only<sp/>if<sp/>this<sp/>function<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;push()<sp/>to<sp/>GridCellZk_pq<sp/>is<sp/>not<sp/>allowed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>emplace(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1ad0720d4f9d57365fc5abe3f4f63e32c9" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1GridCell_1acdf9ef83d894321472076b7562356485" kindref="member">y</ref>,<sp/>T<sp/>z){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::priority_queue&lt;GridCellZk&lt;T&gt;,<sp/>std::vector&lt;<sp/>GridCellZk&lt;T&gt;<sp/>&gt;,<sp/>std::greater&lt;GridCellZk&lt;T&gt;<sp/>&gt;<sp/>&gt;::emplace(x,y,z,++count);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/z/richdem/include/richdem/common/grid_cell.hpp"/>
  </compounddef>
</doxygen>
