<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Seibert2007_8hpp" kind="file" language="C++">
    <compoundname>Seibert2007.hpp</compoundname>
    <includedby refid="flow__accumulation_8hpp" local="no">/z/richdem/include/richdem/methods/flow_accumulation.hpp</includedby>
    <includedby refid="richdem_8hpp" local="yes">/z/richdem/include/richdem/richdem.hpp</includedby>
    <invincdepgraph>
      <node id="826">
        <label>/z/richdem/include/richdem/methods/flow_accumulation.hpp</label>
        <link refid="flow__accumulation_8hpp_source"/>
        <childnode refid="827" relation="include">
        </childnode>
      </node>
      <node id="827">
        <label>/z/richdem/include/richdem/richdem.hpp</label>
        <link refid="richdem_8hpp_source"/>
      </node>
      <node id="825">
        <label>/z/richdem/include/richdem/flowmet/Seibert2007.hpp</label>
        <link refid="Seibert2007_8hpp"/>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="827" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacerichdem">richdem</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_richdem_Seibert2007_hpp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_richdem_Seibert2007_hpp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerichdem" kindref="compound">richdem</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template&lt;class<sp/>AccumF,<sp/>class<sp/>E,<sp/>class<sp/>A&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>void<sp/>KernelSeibertMcGlynn(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>FDMode<sp/>mode,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>AccumF<sp/>accumf,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>Array2D&lt;E&gt;<sp/>&amp;elevations,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Array2D&lt;A&gt;<sp/>&amp;accum,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>dep_t<sp/>&amp;dep,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::queue&lt;GridCell&gt;<sp/>&amp;q,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>int<sp/>x,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>int<sp/>y,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>double<sp/>xparam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//TODO:<sp/>Assumes<sp/>that<sp/>the<sp/>width<sp/>and<sp/>height<sp/>of<sp/>grid<sp/>cells<sp/>are<sp/>equal<sp/>and<sp/>scaled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>constexpr<sp/>double<sp/>d1<sp/><sp/><sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>constexpr<sp/>double<sp/>d2<sp/><sp/><sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>constexpr<sp/>float<sp/><sp/>dang<sp/>=<sp/>std::atan2(d2,d1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>auto<sp/>nwrap<sp/>=<sp/>[](const<sp/>int<sp/>n){<sp/>return<sp/>(n==9)?1:n;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>constexpr<sp/>double<sp/>L1<sp/><sp/><sp/>=<sp/>0.5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>constexpr<sp/>double<sp/>L2<sp/><sp/><sp/>=<sp/>0.354;<sp/>//TODO:<sp/>More<sp/>decimal<sp/>places</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>constexpr<sp/>double<sp/>L[9]<sp/>=<sp/>{0,L1,L2,L1,L2,L1,L2,L1,L2};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::array&lt;double,9&gt;<sp/>svals<sp/><sp/><sp/><sp/>=<sp/>{{0,0,0,0,0,0,0,0,0}};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::array&lt;double,9&gt;<sp/>rvals<sp/><sp/><sp/><sp/>=<sp/>{{0,0,0,0,0,0,0,0,0}};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//Table<sp/>1<sp/>of<sp/>Tarboton<sp/>(1997)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Column<sp/>#<sp/><sp/>=<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/>5<sp/><sp/><sp/>6<sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>const<sp/>int<sp/><sp/><sp/><sp/>dy_e1[8]<sp/>=<sp/>{<sp/>0<sp/>,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/><sp/>0<sp/>,<sp/><sp/>0<sp/>,<sp/><sp/>1<sp/>,<sp/>1<sp/>,<sp/><sp/>0<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>const<sp/>int<sp/><sp/><sp/><sp/>dx_e1[8]<sp/>=<sp/>{<sp/>1<sp/>,<sp/><sp/>0<sp/>,<sp/><sp/>0<sp/>,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/><sp/>0<sp/>,<sp/>0<sp/>,<sp/><sp/>1<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>const<sp/>int<sp/><sp/><sp/><sp/>dy_e2[8]<sp/>=<sp/>{-1<sp/>,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/><sp/>1<sp/>,<sp/><sp/>1<sp/>,<sp/>1<sp/>,<sp/><sp/>1<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>const<sp/>int<sp/><sp/><sp/><sp/>dx_e2[8]<sp/>=<sp/>{<sp/>1<sp/>,<sp/><sp/>1<sp/>,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/>1<sp/>,<sp/><sp/>1<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>const<sp/>double<sp/>ac[8]<sp/><sp/><sp/><sp/>=<sp/>{<sp/>0.,<sp/><sp/>1.,<sp/><sp/>1.,<sp/><sp/>2.,<sp/><sp/>2.,<sp/><sp/>3.,<sp/>3.,<sp/><sp/>4.};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>const<sp/>double<sp/>af[8]<sp/><sp/><sp/><sp/>=<sp/>{<sp/>1.,<sp/>-1.,<sp/><sp/>1.,<sp/>-1.,<sp/><sp/>1.,<sp/>-1.,<sp/>1.,<sp/>-1.};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//I<sp/>remapped<sp/>the<sp/>foregoing<sp/>table<sp/>for<sp/>ease<sp/>of<sp/>use<sp/>with<sp/>RichDEM.<sp/>The<sp/>facets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//are<sp/>renumbered<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>3-&gt;1<sp/><sp/><sp/><sp/>2-&gt;2<sp/><sp/><sp/><sp/>1-&gt;3<sp/><sp/><sp/><sp/>0-&gt;4<sp/><sp/><sp/><sp/>7-&gt;5<sp/><sp/><sp/><sp/>6-&gt;6<sp/><sp/><sp/><sp/>5-&gt;7<sp/><sp/><sp/><sp/>4-&gt;8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//This<sp/>gives<sp/>the<sp/>following<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/>Remapped<sp/>Facet<sp/>#<sp/><sp/>=<sp/><sp/>-<sp/><sp/><sp/>1<sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/>5<sp/><sp/><sp/>6<sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/>8<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/>Tarboton<sp/>Facet<sp/>#<sp/><sp/>=<sp/><sp/>-<sp/><sp/><sp/>3<sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/>7<sp/><sp/><sp/>6<sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/>4<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>int<sp/><sp/><sp/><sp/>dy_e1[9]<sp/>=<sp/>{0,<sp/><sp/>0<sp/>,<sp/>-1<sp/>,<sp/><sp/>-1<sp/>,<sp/><sp/>0<sp/>,<sp/><sp/>0<sp/>,<sp/>1<sp/>,<sp/><sp/>1<sp/>,<sp/><sp/>0<sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>int<sp/><sp/><sp/><sp/>dx_e1[9]<sp/>=<sp/>{0,<sp/>-1<sp/>,<sp/><sp/>0<sp/>,<sp/><sp/><sp/>0<sp/>,<sp/><sp/>1<sp/>,<sp/><sp/>1<sp/>,<sp/>0<sp/>,<sp/><sp/>0<sp/>,<sp/>-1<sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>int<sp/><sp/><sp/><sp/>dy_e2[9]<sp/>=<sp/>{0,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/><sp/>-1<sp/>,<sp/>-1<sp/>,<sp/><sp/>1<sp/>,<sp/>1<sp/>,<sp/><sp/>1<sp/>,<sp/><sp/>1<sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>int<sp/><sp/><sp/><sp/>dx_e2[9]<sp/>=<sp/>{0,<sp/>-1<sp/>,<sp/>-1<sp/>,<sp/><sp/><sp/>1<sp/>,<sp/><sp/>1<sp/>,<sp/><sp/>1<sp/>,<sp/>1<sp/>,<sp/>-1<sp/>,<sp/>-1<sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//const<sp/>double<sp/>ac[9]<sp/><sp/><sp/><sp/>=<sp/>{0,<sp/><sp/>2.,<sp/><sp/>1.,<sp/><sp/><sp/>1.,<sp/><sp/>0.,<sp/><sp/>4.,<sp/>3.,<sp/><sp/>3.,<sp/><sp/>2.<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>double<sp/>af[9]<sp/><sp/><sp/><sp/>=<sp/>{0,<sp/>-1.,<sp/><sp/>1.,<sp/><sp/>-1.,<sp/><sp/>1.,<sp/>-1.,<sp/>1.,<sp/>-1.,<sp/><sp/>1.<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(int<sp/>n=1;n&lt;=8;n++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(!elevations.inGrid<sp/>(x+dx_e1[n],y+dy_e1[n]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(elevations.isNoData(x+dx_e1[n],y+dy_e1[n]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(!elevations.inGrid<sp/>(x+dx_e2[n],y+dy_e2[n]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(elevations.isNoData(x+dx_e2[n],y+dy_e2[n]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//Is<sp/>is<sp/>assumed<sp/>that<sp/>cells<sp/>with<sp/>a<sp/>value<sp/>of<sp/>NoData<sp/>have<sp/>very<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//elevations<sp/>with<sp/>the<sp/>result<sp/>that<sp/>they<sp/>draw<sp/>flow<sp/>off<sp/>of<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//Choose<sp/>elevations<sp/>based<sp/>on<sp/>Table<sp/>1<sp/>of<sp/>Tarboton<sp/>(1997),<sp/>Barnes<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e0<sp/>=<sp/>elevations(x,y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e1<sp/>=<sp/>elevations(x+dx_e1[n],y+dy_e1[n]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e2<sp/>=<sp/>elevations(x+dx_e2[n],y+dy_e2[n]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>s1<sp/>=<sp/>(e0-e1)/d1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>s2<sp/>=<sp/>(e1-e2)/d2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>rvals[n]<sp/>=<sp/>std::atan2(s2,s1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(rvals[n]&lt;1e-7){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvals[n]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>svals[n]<sp/>=<sp/>s1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if(rvals[n]&gt;dang-1e-7){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvals[n]<sp/>=<sp/>dang;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>svals[n]<sp/>=<sp/>(e0-e2)/sqrt(d1*d1+d2*d2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>svals[n]<sp/>=<sp/>sqrt(s1*s1+s2*s2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(svals[n]&lt;0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>svals[n]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(af[n]==1<sp/>&amp;&amp;<sp/>rvals[n]==0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvals[n]<sp/>=<sp/>dang;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>else<sp/>if(af[n]==1<sp/>&amp;&amp;<sp/>rvals[n]==dang)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvals[n]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>else<sp/>if(af[n]==1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvals[n]<sp/>=<sp/>M_PI/4-rvals[n];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>assert(0&lt;=rvals[n]<sp/>&amp;&amp;<sp/>rvals[n]&lt;=dang);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>double<sp/>C<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(int<sp/>n=1;n&lt;=8;n++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>svals[n]<sp/>=<sp/>std::pow(svals[n]*L[n],<sp/>xparam);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>C<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>svals[n];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if(C==0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>assert(C&gt;0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>C<sp/>=<sp/>accum(x,y)/C;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>assert(C&gt;0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(int<sp/>n=1;n&lt;=8;n++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(svals[n]&lt;=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(rvals[n]==0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumf(x,y,n,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dep,accum,q,<sp/>C*svals[n]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if(rvals[n]==dang){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumf(x,y,nwrap(n+1),<sp/>dep,accum,q,<sp/>C*svals[n]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0&lt;=rvals[n]<sp/>&amp;&amp;<sp/>rvals[n]&lt;=dang);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(C&gt;0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(svals[n]&gt;0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumf(x,y,n,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dep,accum,q,<sp/>C*svals[n]*(<sp/><sp/>rvals[n]/(M_PI/4.)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumf(x,y,nwrap(n+1),<sp/>dep,accum,q,<sp/>C*svals[n]*(1-rvals[n]/(M_PI/4.)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template&lt;class<sp/>E,<sp/>class<sp/>A&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>FM_SeibertMcGlynn(const<sp/>Array2D&lt;E&gt;<sp/>&amp;elevations,<sp/>Array2D&lt;A&gt;<sp/>&amp;accum,<sp/>double<sp/>x){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>RDLOG_ALG_NAME&lt;&lt;&quot;Seibert<sp/>and<sp/>McGlynn<sp/>(2007)<sp/>Flow<sp/>Accumulation<sp/>(aka<sp/>MD-Infinity,<sp/>MD∞)&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>RDLOG_WARN&lt;&lt;&quot;TODO:<sp/>This<sp/>flow<sp/>accumulation<sp/>method<sp/>is<sp/>not<sp/>yet<sp/>functional.&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>RDLOG_CONFIG&lt;&lt;&quot;x<sp/>=<sp/>&quot;&lt;&lt;x;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>KernelFlowdir(KernelSeibertMcGlynn&lt;decltype(PassAccumulation&lt;A&gt;),E,A&gt;,PassAccumulation&lt;A&gt;,elevations,accum,x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/z/richdem/include/richdem/flowmet/Seibert2007.hpp"/>
  </compounddef>
</doxygen>
