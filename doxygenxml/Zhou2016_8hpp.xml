<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Zhou2016_8hpp" kind="file" language="C++">
    <compoundname>Zhou2016.hpp</compoundname>
    <includes refid="logger_8hpp" local="yes">richdem/common/logger.hpp</includes>
    <includes refid="Array2D_8hpp" local="yes">richdem/common/Array2D.hpp</includes>
    <includes refid="timer_8hpp" local="yes">richdem/common/timer.hpp</includes>
    <includes local="no">queue</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">iostream</includes>
    <includedby refid="depressions_8hpp" local="no">/z/richdem/include/richdem/depressions/depressions.hpp</includedby>
    <includedby refid="richdem_8hpp" local="yes">/z/richdem/include/richdem/richdem.hpp</includedby>
    <incdepgraph>
      <node id="495">
        <label>iomanip</label>
      </node>
      <node id="510">
        <label>queue</label>
      </node>
      <node id="500">
        <label>limits</label>
      </node>
      <node id="496">
        <label>cassert</label>
      </node>
      <node id="499">
        <label>stdexcept</label>
      </node>
      <node id="490">
        <label>string</label>
      </node>
      <node id="491">
        <label>richdem/common/Array2D.hpp</label>
        <link refid="Array2D_8hpp"/>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>map</label>
      </node>
      <node id="502">
        <label>unordered_set</label>
      </node>
      <node id="486">
        <label>/z/richdem/include/richdem/depressions/Zhou2016.hpp</label>
        <link refid="Zhou2016_8hpp"/>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
      </node>
      <node id="494">
        <label>fstream</label>
      </node>
      <node id="498">
        <label>typeinfo</label>
      </node>
      <node id="504">
        <label>richdem/common/version.hpp</label>
        <link refid="version_8hpp"/>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
      </node>
      <node id="501">
        <label>ctime</label>
      </node>
      <node id="493">
        <label>vector</label>
      </node>
      <node id="489">
        <label>sstream</label>
      </node>
      <node id="509">
        <label>sys/time.h</label>
      </node>
      <node id="488">
        <label>iostream</label>
      </node>
      <node id="506">
        <label>richdem/common/ManagedVector.hpp</label>
        <link refid="ManagedVector_8hpp_source"/>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="492">
        <label>gdal.hpp</label>
        <link refid="gdal_8hpp_source"/>
      </node>
      <node id="508">
        <label>richdem/common/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
      <node id="505">
        <label>richdem/common/constants.hpp</label>
        <link refid="constants_8hpp"/>
      </node>
      <node id="497">
        <label>algorithm</label>
      </node>
      <node id="507">
        <label>memory</label>
      </node>
      <node id="487">
        <label>richdem/common/logger.hpp</label>
        <link refid="logger_8hpp_source"/>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="512">
        <label>/z/richdem/include/richdem/depressions/depressions.hpp</label>
        <link refid="depressions_8hpp_source"/>
        <childnode refid="513" relation="include">
        </childnode>
      </node>
      <node id="511">
        <label>/z/richdem/include/richdem/depressions/Zhou2016.hpp</label>
        <link refid="Zhou2016_8hpp"/>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
      </node>
      <node id="513">
        <label>/z/richdem/include/richdem/richdem.hpp</label>
        <link refid="richdem_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacerichdem">richdem</innernamespace>
    <briefdescription>
<para>Defines the Priority-Flood algorithm described by Zhou, G., Sun, Z., Fu, S., 2016. An efficient variant of the Priority-Flood algorithm for filling depressions in raster digital elevation models. Computers &amp; Geosciences 90, Part A, 87 â€“ 96. doi:http://dx.doi.org/10.1016/j.cageo.2016.02.021. </para>    </briefdescription>
    <detaileddescription>
<para>The code herein has been extensive modified by Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>) for inclusion with RichDEM.</para><para>Richard Barnes (<ulink url="mailto:rbarnes@umn.edu">rbarnes@umn.edu</ulink>), 2015 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifndef<sp/>_richdem_zhou2016pf_hpp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_richdem_zhou2016pf_hpp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;richdem/common/logger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Array2D_8hpp" kindref="compound">richdem/common/Array2D.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">richdem/common/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerichdem" kindref="compound">richdem</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>label_t;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>elev_t&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ProcessTraceQue_onepass(</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>Array2D&lt;elev_t&gt;<sp/>&amp;dem,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>Array2D&lt;label_t&gt;<sp/>&amp;labels,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>std::queue&lt;int&gt;<sp/>&amp;traceQueue,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::priority_queue&lt;std::pair&lt;elev_t,<sp/>int&gt;,<sp/>std::vector&lt;<sp/>std::pair&lt;elev_t,<sp/>int&gt;<sp/>&gt;,<sp/>std::greater&lt;<sp/>std::pair&lt;elev_t,<sp/>int&gt;<sp/>&gt;<sp/>&gt;<sp/>&amp;priorityQueue</highlight></codeline>
<codeline lineno="30"><highlight class="normal">){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!traceQueue.empty()){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>traceQueue.front();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>traceQueue.pop();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bInPQ<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=1;n&lt;=8;n++){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ni<sp/>=<sp/>dem.nToI(c,<sp/>dx[n],<sp/>dy[n]);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ni==-1)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(labels(ni)!=0)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>neighbour<sp/>is<sp/>unprocessed<sp/>and<sp/>higher<sp/>than<sp/>the<sp/>central<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dem(c)&lt;dem(ni)){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traceQueue.emplace(ni);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels(ni)<sp/>=<sp/>labels(c);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Decide<sp/><sp/>whether<sp/>(nx,<sp/>ny)<sp/>is<sp/>a<sp/>true<sp/>border<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bInPQ)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBoundary<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn=1;nn&lt;=8;nn++){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nni<sp/>=<sp/>dem.nToI(ni,<sp/>dx[n],<sp/>dy[n]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nni==-1)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labels(nni)!=0<sp/>&amp;&amp;<sp/>dem(nni)&lt;dem(ni)){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isBoundary<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isBoundary){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priorityQueue.emplace(dem(c),c);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bInPQ<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>elev_t&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ProcessPit_onepass(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>elev_t<sp/>c_elev,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>Array2D&lt;elev_t&gt;<sp/>&amp;dem,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>Array2D&lt;label_t&gt;<sp/>&amp;labels,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>std::queue&lt;int&gt;<sp/>&amp;depressionQue,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::queue&lt;int&gt;<sp/>&amp;traceQueue,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>std::priority_queue&lt;std::pair&lt;elev_t,<sp/>int&gt;,<sp/>std::vector&lt;<sp/>std::pair&lt;elev_t,<sp/>int&gt;<sp/>&gt;,<sp/>std::greater&lt;<sp/>std::pair&lt;elev_t,<sp/>int&gt;<sp/>&gt;<sp/>&gt;<sp/>&amp;priorityQueue</highlight></codeline>
<codeline lineno="81"><highlight class="normal">){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!depressionQue.empty()){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>depressionQue.front();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>depressionQue.pop();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=1;n&lt;=8;n++){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ni<sp/>=<sp/>dem.nToI(c,<sp/>dx[n],<sp/>dy[n]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ni==-1)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(labels(ni)!=0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labels(ni)<sp/>=<sp/>labels(c);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dem(ni)<sp/>&gt;<sp/>c_elev)<sp/>{<sp/></highlight><highlight class="comment">//Slope<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traceQueue.emplace(ni);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Depression<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dem(ni)<sp/>=<sp/>c_elev;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depressionQue.emplace(ni);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>elev_t&gt;</highlight></codeline>
<codeline lineno="127" refid="Zhou2016_8hpp_1a92303ebbfaabc1415420484264362e68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Zhou2016_8hpp_1a92303ebbfaabc1415420484264362e68" kindref="member">PriorityFlood_Zhou2016</ref>(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D&lt;elev_t&gt;</ref><sp/>&amp;dem</highlight></codeline>
<codeline lineno="129"><highlight class="normal">){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>std::queue&lt;int&gt;<sp/>traceQueue;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>std::queue&lt;int&gt;<sp/>depressionQue;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>RDLOG_ALG_NAME&lt;&lt;</highlight><highlight class="stringliteral">&quot;Priority-Flood<sp/>(Zhou2016<sp/>version)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>RDLOG_CITATION&lt;&lt;</highlight><highlight class="stringliteral">&quot;Zhou,<sp/>G.,<sp/>Sun,<sp/>Z.,<sp/>Fu,<sp/>S.,<sp/>2016.<sp/>An<sp/>efficient<sp/>variant<sp/>of<sp/>the<sp/>Priority-Flood<sp/>algorithm<sp/>for<sp/>filling<sp/>depressions<sp/>in<sp/>raster<sp/>digital<sp/>elevation<sp/>models.<sp/>Computers<sp/>&amp;<sp/>Geosciences<sp/>90,<sp/>Part<sp/>A,<sp/>87<sp/>â€“<sp/>96.<sp/>doi:http://dx.doi.org/10.1016/j.cageo.2016.02.021&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1Timer" kindref="compound">Timer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>timer.<ref refid="classrichdem_1_1Timer_1a6c1403aed0cc07ac87309e63a87d2217" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1Array2D" kindref="compound">Array2D&lt;label_t&gt;</ref><sp/>labels;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>labels.<ref refid="classrichdem_1_1Array2D_1a4baf4116eb21f3588877dfd0d0613aa2" kindref="member">resize</ref>(dem);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>labels.<ref refid="classrichdem_1_1Array2D_1ac4557b9827f5cdb390697611c4a64b2d" kindref="member">setAll</ref>(0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>std::priority_queue&lt;std::pair&lt;elev_t,<sp/>int&gt;,<sp/>std::vector&lt;<sp/>std::pair&lt;elev_t,<sp/>int&gt;<sp/>&gt;,<sp/>std::greater&lt;<sp/>std::pair&lt;elev_t,<sp/>int&gt;<sp/>&gt;<sp/>&gt;<sp/>priorityQueue;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>PlaceCell<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>dem.<ref refid="classrichdem_1_1Array2D_1a6197b6cf8545ea48560755aad1c4a3ff" kindref="member">xyToI</ref>(x,y);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>priorityQueue.emplace(dem(i),i);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;dem.<ref refid="classrichdem_1_1Array2D_1ad4d72d15f5a6199631051038088bb306" kindref="member">width</ref>();x++)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Top<sp/>Row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>PlaceCell(x,0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;dem.<ref refid="classrichdem_1_1Array2D_1ad4d72d15f5a6199631051038088bb306" kindref="member">width</ref>();x++)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Bottom<sp/>Row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>PlaceCell(x,dem.<ref refid="classrichdem_1_1Array2D_1ab2e27ec2c5986596760a5256d92a2eb0" kindref="member">height</ref>()-1);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=1;y&lt;dem.<ref refid="classrichdem_1_1Array2D_1ab2e27ec2c5986596760a5256d92a2eb0" kindref="member">height</ref>()-1;y++)<sp/><sp/></highlight><highlight class="comment">//Left<sp/>Column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>PlaceCell(0,y);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=1;y&lt;dem.<ref refid="classrichdem_1_1Array2D_1ab2e27ec2c5986596760a5256d92a2eb0" kindref="member">height</ref>()-1;y++)<sp/><sp/></highlight><highlight class="comment">//Right<sp/>Column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>PlaceCell(dem.<ref refid="classrichdem_1_1Array2D_1ad4d72d15f5a6199631051038088bb306" kindref="member">width</ref>()-1,y);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!priorityQueue.empty()){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;elev_t,<sp/>int&gt;<sp/>c<sp/>=<sp/>priorityQueue.top();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>priorityQueue.pop();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>labels(c.second)<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=1;n&lt;=8;n++){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ni<sp/>=<sp/>dem.<ref refid="classrichdem_1_1Array2D_1a2f3777d7d025150940044de05b78657c" kindref="member">nToI</ref>(c.second,<sp/><ref refid="constants_8hpp_1aa5b197c553cb75cc5bed18478bbeab41" kindref="member">dx</ref>[n],<sp/><ref refid="constants_8hpp_1a8eee3f4a3891f1bd2c44ce2df9df4fb6" kindref="member">dy</ref>[n]);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ni==-1)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(labels(ni)!=0)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labels(ni)<sp/>=<sp/>labels(c.second);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dem(ni)&lt;=c.first){<sp/></highlight><highlight class="comment">//Depression<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dem(ni)<sp/>=<sp/>c.first;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depressionQue.emplace(ni);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProcessPit_onepass(c.first,dem,labels,depressionQue,traceQueue,priorityQueue);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Slope<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traceQueue.emplace(ni);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProcessTraceQue_onepass(dem,labels,traceQueue,priorityQueue);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>timer.<ref refid="classrichdem_1_1Timer_1a94adfb2b628004e774b8d8ac4d6654b2" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>RDLOG_TIME_USE&lt;&lt;</highlight><highlight class="stringliteral">&quot;Zhou2016<sp/>wall-time<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;timer.<ref refid="classrichdem_1_1Timer_1a3866ded735d646bf1749eb4c553a7b75" kindref="member">accumulated</ref>()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/z/richdem/include/richdem/depressions/Zhou2016.hpp"/>
  </compounddef>
</doxygen>
