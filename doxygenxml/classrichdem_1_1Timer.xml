<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrichdem_1_1Timer" kind="class" language="C++" prot="public">
    <compoundname>richdem::Timer</compoundname>
    <includes refid="timer_8hpp" local="no">timer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrichdem_1_1Timer_1a1fa79a2daafde3b255d438c5b2a6a691" prot="private" static="no" mutable="no">
        <type>timeval</type>
        <definition>timeval richdem::Timer::start_time</definition>
        <argsstring></argsstring>
        <name>start_time</name>
        <briefdescription>
<para>Last time the timer was started. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="20" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrichdem_1_1Timer_1a01704121c1330fa4be137b3f286b868e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double richdem::Timer::accumulated_time</definition>
        <argsstring></argsstring>
        <name>accumulated_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Accumulated running time since creation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="21" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrichdem_1_1Timer_1adf5dcb5cc945a9b8f3e1dcc3ead97e70" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool richdem::Timer::running</definition>
        <argsstring></argsstring>
        <name>running</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True when the timer is running. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="22" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrichdem_1_1Timer_1a03ddf33d7ed5895fb9318575dde0a80b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double richdem::Timer::timediff</definition>
        <argsstring>(timeval beginning, timeval end)</argsstring>
        <name>timediff</name>
        <param>
          <type>timeval</type>
          <declname>beginning</declname>
        </param>
        <param>
          <type>timeval</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Number of (fractional) seconds between two time objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="25" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="25" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrichdem_1_1Timer_1af3d339851fe92fa83a252c22f579be24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>richdem::Timer::Timer</definition>
        <argsstring>()=default</argsstring>
        <name>Timer</name>
        <briefdescription>
<para>Creates a <ref refid="classrichdem_1_1Timer" kindref="compound">Timer</ref> which is not running and has no accumulated time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1Timer_1a6c1403aed0cc07ac87309e63a87d2217" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void richdem::Timer::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>Start the timers. Throws an exception if timer was already running. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="36" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1Timer_1a94adfb2b628004e774b8d8ac4d6654b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double richdem::Timer::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop the timer. Throws an exception if timer was already stopped. Calling this adds to the timer&apos;s accumulated time.</para><para><simplesect kind="return"><para>The accumulated time in seconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="47" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="47" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1Timer_1a3866ded735d646bf1749eb4c553a7b75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double richdem::Timer::accumulated</definition>
        <argsstring>()</argsstring>
        <name>accumulated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the timer&apos;s accumulated time. Throws an exception if the timer is running.</para><para><simplesect kind="return"><para>The timer&apos;s accumulated time, in seconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="63" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1Timer_1a8d1281c24a59112849fe554156eba7dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double richdem::Timer::lap</definition>
        <argsstring>()</argsstring>
        <name>lap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the time between when the timer was started and the current moment. Throws an exception if the timer is not running.</para><para><simplesect kind="return"><para>Time since the timer was started and current moment, in seconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="73" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classrichdem_1_1Timer_1a292f8580b29a047c77b8de7ff31d21b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void richdem::Timer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stops the timer and resets its accumulated time. No exceptions are thrown ever. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/common/timer.hpp" line="83" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Used to time how intervals in code. </para>    </briefdescription>
    <detaileddescription>
<para>Such as how long it takes a given function to run, or how long I/O has taken. </para>    </detaileddescription>
    <location file="/z/richdem/include/richdem/common/timer.hpp" line="18" column="1" bodyfile="/z/richdem/include/richdem/common/timer.hpp" bodystart="18" bodyend="87"/>
    <listofallmembers>
      <member refid="classrichdem_1_1Timer_1a3866ded735d646bf1749eb4c553a7b75" prot="public" virt="non-virtual"><scope>richdem::Timer</scope><name>accumulated</name></member>
      <member refid="classrichdem_1_1Timer_1a01704121c1330fa4be137b3f286b868e" prot="private" virt="non-virtual"><scope>richdem::Timer</scope><name>accumulated_time</name></member>
      <member refid="classrichdem_1_1Timer_1a8d1281c24a59112849fe554156eba7dd" prot="public" virt="non-virtual"><scope>richdem::Timer</scope><name>lap</name></member>
      <member refid="classrichdem_1_1Timer_1a292f8580b29a047c77b8de7ff31d21b5" prot="public" virt="non-virtual"><scope>richdem::Timer</scope><name>reset</name></member>
      <member refid="classrichdem_1_1Timer_1adf5dcb5cc945a9b8f3e1dcc3ead97e70" prot="private" virt="non-virtual"><scope>richdem::Timer</scope><name>running</name></member>
      <member refid="classrichdem_1_1Timer_1a6c1403aed0cc07ac87309e63a87d2217" prot="public" virt="non-virtual"><scope>richdem::Timer</scope><name>start</name></member>
      <member refid="classrichdem_1_1Timer_1a1fa79a2daafde3b255d438c5b2a6a691" prot="private" virt="non-virtual"><scope>richdem::Timer</scope><name>start_time</name></member>
      <member refid="classrichdem_1_1Timer_1a94adfb2b628004e774b8d8ac4d6654b2" prot="public" virt="non-virtual"><scope>richdem::Timer</scope><name>stop</name></member>
      <member refid="classrichdem_1_1Timer_1a03ddf33d7ed5895fb9318575dde0a80b" prot="private" virt="non-virtual"><scope>richdem::Timer</scope><name>timediff</name></member>
      <member refid="classrichdem_1_1Timer_1af3d339851fe92fa83a252c22f579be24" prot="public" virt="non-virtual"><scope>richdem::Timer</scope><name>Timer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
