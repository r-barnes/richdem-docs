<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="generate__square__grid_8cpp" kind="file" language="C++">
    <compoundname>generate_square_grid.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">cstdlib</includes>
    <incdepgraph>
      <node id="613">
        <label>/z/richdem/include/richdem/flats/generate_square_grid.cpp</label>
        <link refid="generate__square__grid_8cpp"/>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
      </node>
      <node id="615">
        <label>fstream</label>
      </node>
      <node id="616">
        <label>cstdlib</label>
      </node>
      <node id="614">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="generate__square__grid_8cpp_1a219117de5bc5a442cefda7efb75f9f3d" prot="public" static="no">
        <name>XBIG</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="5" column="9" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="generate__square__grid_8cpp_1adbe7cde2171fe64c369c192a022c4d13" prot="public" static="no">
        <name>YBIG</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="6" column="9" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="generate__square__grid_8cpp_1aa556e24def888e89eca82a9b5867eeb5" prot="public" static="no">
        <name>IN_GRID</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(x&gt;=0 &amp;&amp; y&gt;=0 &amp;&amp; x&lt;x_max &amp;&amp; y&lt;y_max)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="7" column="9" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="generate__square__grid_8cpp_1a16a3bdba58e0572afe05ced94db789eb" prot="public" static="no">
        <name>EDGE_GRID</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(x==0 || y==0 || x==x_max-1 || y==y_max-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="8" column="9" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="generate__square__grid_8cpp_1a1e05b7ee40bb4976e176379a7601ff7f" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char elevations[XBIG][YBIG]</definition>
        <argsstring>[XBIG][YBIG]</argsstring>
        <name>elevations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="10" column="1" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="generate__square__grid_8cpp_1a5f0bb6d8a3e66525c3e6264cb8288e43" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int x_max</definition>
        <argsstring></argsstring>
        <name>x_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="11" column="1" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="generate__square__grid_8cpp_1ad033aea530fbbcf5bcd6cd98d882e3a5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int y_max</definition>
        <argsstring></argsstring>
        <name>y_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="11" column="1" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="generate__square__grid_8cpp_1abc824f2f4055beddebd0b6f68805ff33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PrintDEM</definition>
        <argsstring>()</argsstring>
        <name>PrintDEM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="13" column="1" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="13" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="generate__square__grid_8cpp_1ac62a105c2d87bde1a5f46fe665b311f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GenerateDEM</definition>
        <argsstring>()</argsstring>
        <name>GenerateDEM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="29" column="1" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="29" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="generate__square__grid_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp" line="40" column="1" bodyfile="/z/richdem/include/richdem/flats/generate_square_grid.cpp" bodystart="40" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XBIG<sp/>10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YBIG<sp/>10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IN_GRID(x,y)<sp/><sp/><sp/>(x&gt;=0<sp/>&amp;&amp;<sp/>y&gt;=0<sp/>&amp;&amp;<sp/>x&lt;x_max<sp/>&amp;&amp;<sp/>y&lt;y_max)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EDGE_GRID(x,y)<sp/>(x==0<sp/>||<sp/>y==0<sp/>||<sp/>x==x_max-1<sp/>||<sp/>y==y_max-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>elevations[XBIG][YBIG];</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_max,y_max;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PrintDEM(){</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>ofstream<sp/>fout(</highlight><highlight class="stringliteral">&quot;square_grid.dem&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>fout&lt;&lt;</highlight><highlight class="stringliteral">&quot;ncols\t\t&quot;</highlight><highlight class="normal">&lt;&lt;x_max&lt;&lt;endl;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>fout&lt;&lt;</highlight><highlight class="stringliteral">&quot;nrows\t\t&quot;</highlight><highlight class="normal">&lt;&lt;y_max&lt;&lt;endl;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>fout&lt;&lt;</highlight><highlight class="stringliteral">&quot;xllcorner\t\t0&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>fout&lt;&lt;</highlight><highlight class="stringliteral">&quot;yllcorner\t\t0&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>fout&lt;&lt;</highlight><highlight class="stringliteral">&quot;cellsize\t\t3&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>fout&lt;&lt;</highlight><highlight class="stringliteral">&quot;NODATA_value\t\t-1&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;y_max;y++){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;x_max;x++)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout&lt;&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)elevations[x][y]&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout&lt;&lt;endl;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>fout.close();</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GenerateDEM(){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;x_max;x++)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;y_max;y++)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(EDGE_GRID(x,y))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elevations[x][y]=9;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elevations[x][y]=6;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>elevations[2][y_max-1]=5;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc!=2){</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>&lt;LENGTH<sp/>OF<sp/>ONE<sp/>SIDE<sp/>OF<sp/>GRID&gt;\n&quot;</highlight><highlight class="normal">,argv[0]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>x_max=y_max=atoi(argv[1]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateDEM();<sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintDEM();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/z/richdem/include/richdem/flats/generate_square_grid.cpp"/>
  </compounddef>
</doxygen>
