<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ManagedVector_8hpp" kind="file" language="C++">
    <compoundname>ManagedVector.hpp</compoundname>
    <includes local="no">memory</includes>
    <includedby refid="Array2D_8hpp" local="yes">/z/richdem/include/richdem/common/Array2D.hpp</includedby>
    <includedby refid="richdem_8hpp" local="yes">/z/richdem/include/richdem/richdem.hpp</includedby>
    <incdepgraph>
      <node id="182">
        <label>/z/richdem/include/richdem/common/ManagedVector.hpp</label>
        <link refid="ManagedVector_8hpp"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="203">
        <label>/z/richdem/include/richdem/methods/d8_methods.hpp</label>
        <link refid="d8__methods_8hpp"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>/z/richdem/include/richdem/tiled/A2Array2D.hpp</label>
        <link refid="A2Array2D_8hpp"/>
      </node>
      <node id="207">
        <label>/z/richdem/include/richdem/misc/misc_methods.hpp</label>
        <link refid="misc__methods_8hpp"/>
      </node>
      <node id="187">
        <label>/z/richdem/include/richdem/depressions/depressions.hpp</label>
        <link refid="depressions_8hpp_source"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>/z/richdem/include/richdem/flowmet/OCallaghan1984.hpp</label>
        <link refid="OCallaghan1984_8hpp_source"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>/z/richdem/include/richdem/methods/flow_accumulation_generic.hpp</label>
        <link refid="flow__accumulation__generic_8hpp_source"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="198">
        <label>/z/richdem/include/richdem/flowmet/Freeman1991.hpp</label>
        <link refid="Freeman1991_8hpp_source"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>/z/richdem/include/richdem/common/Array2D.hpp</label>
        <link refid="Array2D_8hpp"/>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>/z/richdem/include/richdem/depressions/Zhou2016.hpp</label>
        <link refid="Zhou2016_8hpp"/>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>/z/richdem/include/richdem/flowmet/Quinn1991.hpp</label>
        <link refid="Quinn1991_8hpp_source"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>/z/richdem/include/richdem/flats/flat_resolution_dinf.hpp</label>
        <link refid="flat__resolution__dinf_8hpp"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>/z/richdem/include/richdem/methods/dinf_methods.hpp</label>
        <link refid="dinf__methods_8hpp"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>/z/richdem/include/richdem/flowmet/d8_flowdirs.hpp</label>
        <link refid="d8__flowdirs_8hpp"/>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>/z/richdem/include/richdem/methods/flow_accumulation.hpp</label>
        <link refid="flow__accumulation_8hpp_source"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>/z/richdem/include/richdem/depressions/Lindsay2016.hpp</label>
        <link refid="Lindsay2016_8hpp_source"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>/z/richdem/include/richdem/flats/garbrecht.hpp</label>
        <link refid="garbrecht_8hpp_source"/>
      </node>
      <node id="193">
        <label>/z/richdem/include/richdem/flats/flat_resolution.hpp</label>
        <link refid="flat__resolution_8hpp"/>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>/z/richdem/include/richdem/flowmet/Tarboton1997.hpp</label>
        <link refid="Tarboton1997_8hpp_source"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>/z/richdem/include/richdem/richdem.hpp</label>
        <link refid="richdem_8hpp_source"/>
      </node>
      <node id="206">
        <label>/z/richdem/include/richdem/methods/terrain_attributes.hpp</label>
        <link refid="terrain__attributes_8hpp_source"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>/z/richdem/include/richdem/depressions/Barnes2014.hpp</label>
        <link refid="Barnes2014_8hpp"/>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>/z/richdem/include/richdem/flowmet/dinf_flowdirs.hpp</label>
        <link refid="dinf__flowdirs_8hpp"/>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="199">
        <label>/z/richdem/include/richdem/flowmet/Holmgren1994.hpp</label>
        <link refid="Holmgren1994_8hpp_source"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>/z/richdem/include/richdem/common/ManagedVector.hpp</label>
        <link refid="ManagedVector_8hpp"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>/z/richdem/include/richdem/flowmet/Fairfield1991.hpp</label>
        <link refid="Fairfield1991_8hpp_source"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classrichdem_1_1ManagedVector" prot="public">richdem::ManagedVector</innerclass>
    <innernamespace refid="namespacerichdem">richdem</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_richdem_managed_vector_hpp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_richdem_managed_vector_hpp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerichdem" kindref="compound">richdem</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="11" refid="classrichdem_1_1ManagedVector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;T[]&gt;<sp/>_data;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/>_owned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_size<sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1ManagedVector_1a0a6e08e636ec4b3b5c5c8992796abb17" kindref="member">ManagedVector</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classrichdem_1_1ManagedVector_1a713178244b109532e619553f44402203" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1ManagedVector_1a713178244b109532e619553f44402203" kindref="member">ManagedVector</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>,<sp/>T<sp/>default_val=T()){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>_size<sp/>=<sp/><ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>_data.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[size]);<sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>unique<sp/>pointer<sp/>to<sp/>newly<sp/>allocated<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>;i++)<sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>all<sp/>members<sp/>to<sp/>default<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_data[i]<sp/>=<sp/>default_val;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;ManagedVector<sp/>construct<sp/>with<sp/>owned<sp/>data<sp/>at<sp/>&quot;&lt;&lt;((void*)_data.get())&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classrichdem_1_1ManagedVector_1acbef53dc494b12bb2a88daf370221b70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1ManagedVector_1acbef53dc494b12bb2a88daf370221b70" kindref="member">ManagedVector</ref>(T*<sp/><ref refid="classrichdem_1_1ManagedVector_1a24c9b22b6ca110d41e965e0b1a12b83a" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;ManagedVector<sp/>construct<sp/>with<sp/>unowned<sp/>data<sp/>at<sp/>&quot;&lt;&lt;((void*)data0)&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>_data.reset(data);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>_size<sp/><sp/>=<sp/><ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>_owned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>from<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1ManagedVector_1a0a6e08e636ec4b3b5c5c8992796abb17" kindref="member">ManagedVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector&lt;U&gt;</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;Copying<sp/>ManagedVector<sp/>from<sp/>U&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>_size<sp/>=<sp/>other.<ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_data.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[other.<ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>()]);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;i&lt;other.<ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>();i++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_data[i]<sp/>=<sp/>other._data[i];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Should<sp/>this<sp/>clear<sp/>old<sp/>data?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1ManagedVector_1a0a6e08e636ec4b3b5c5c8992796abb17" kindref="member">ManagedVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector&lt;T&gt;</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;Copying<sp/>ManagedVector<sp/>from<sp/>T&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>_size<sp/>=<sp/>other.<ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>_data.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[other.<ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>()]);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;i&lt;other.<ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>();i++)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_data[i]<sp/>=<sp/>other._data[i];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Should<sp/>this<sp/>clear<sp/>old<sp/>data?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Move<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1ManagedVector_1a0a6e08e636ec4b3b5c5c8992796abb17" kindref="member">ManagedVector</ref>(<ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector&lt;U&gt;</ref><sp/>&amp;&amp;other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;Move<sp/>constructor<sp/>ManagedVector&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>_size<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other._size;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>_data<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::move(other._data);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>_owned<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other._owned;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>other._owned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>other._size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>~<ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector</ref>(){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!_owned){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;ManagedVector<sp/>releasing<sp/>data<sp/>at<sp/>&quot;&lt;&lt;((void*)_data.get())&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_data.release();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(_data.get()!=nullptr){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cerr&lt;&lt;&quot;ManagedVector<sp/>freeing<sp/>its<sp/>data<sp/>at<sp/>&quot;&lt;&lt;((void*)_data.get())&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}<sp/>else<sp/>{<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cerr&lt;&lt;&quot;ManagedVector<sp/>destructing<sp/>with<sp/>no<sp/>data...&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector&lt;T&gt;</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector&lt;U&gt;</ref>&amp;<sp/>other){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;ManagedVector<sp/>copy<sp/>assignment<sp/>of<sp/>&quot;&lt;&lt;((void*)other._data.get())&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector&lt;T&gt;</ref><sp/>tmp(other);<sp/><sp/></highlight><highlight class="comment">//<sp/>re-use<sp/>copy-constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>std::move(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-use<sp/>move-assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="101" refid="classrichdem_1_1ManagedVector_1a1817b0aa00b875eeb8f52366b34fde5f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector&lt;T&gt;</ref>&amp;<sp/><ref refid="classrichdem_1_1ManagedVector_1a1817b0aa00b875eeb8f52366b34fde5f" kindref="member">operator=</ref>(<ref refid="classrichdem_1_1ManagedVector" kindref="compound">ManagedVector&lt;U&gt;</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;ManagedVector<sp/>move<sp/>assignment<sp/>of<sp/>&quot;&lt;&lt;((void*)other._data.get())&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>_size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>_data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::move(other._data);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>_owned<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other._owned;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>other._owned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>other._size<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classrichdem_1_1ManagedVector_1a24c9b22b6ca110d41e965e0b1a12b83a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classrichdem_1_1ManagedVector_1a24c9b22b6ca110d41e965e0b1a12b83a" kindref="member">data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.get();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classrichdem_1_1ManagedVector_1a1bb3b649ad11e3095bf0aee90c31989e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classrichdem_1_1ManagedVector_1a1bb3b649ad11e3095bf0aee90c31989e" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.get();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classrichdem_1_1ManagedVector_1a0c7347cc8f769de977d375ad65e30d01" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1ManagedVector_1a0c7347cc8f769de977d375ad65e30d01" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_size==0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1ManagedVector_1a1c9b5baebb94d6e39fb01005e28a7ffb" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_size;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classrichdem_1_1ManagedVector_1af91432fe168346fe0d572da276bb10a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrichdem_1_1ManagedVector_1af91432fe168346fe0d572da276bb10a4" kindref="member">owned</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_owned;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Keep<sp/>old<sp/>memory?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_size==new_size)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!_owned)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>resize<sp/>unowned<sp/>memory!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>oldmem<sp/>=<sp/>_data.get();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>_data.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[new_size]);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr&lt;&lt;&quot;Resizing<sp/>ManagedVector<sp/>from<sp/>&quot;&lt;&lt;((void*)oldmem)&lt;&lt;&quot;<sp/>to<sp/>&quot;&lt;&lt;((void*)_data.get())&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>_size<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data[i];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data[i];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/z/richdem/include/richdem/common/ManagedVector.hpp"/>
  </compounddef>
</doxygen>
