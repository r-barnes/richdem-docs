<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="richdem_8cpp" kind="file" language="C++">
    <compoundname>richdem.cpp</compoundname>
    <includes refid="logger_8hpp" local="yes">richdem/common/logger.hpp</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="1046">
        <label>string</label>
      </node>
      <node id="1047">
        <label>map</label>
      </node>
      <node id="1045">
        <label>sstream</label>
      </node>
      <node id="1044">
        <label>iostream</label>
      </node>
      <node id="1042">
        <label>/z/richdem/include/richdem/richdem.cpp</label>
        <link refid="richdem_8cpp"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
      </node>
      <node id="1043">
        <label>richdem/common/logger.hpp</label>
        <link refid="logger_8hpp_source"/>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerichdem">richdem</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;richdem/common/logger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerichdem" kindref="compound">richdem</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//TODO:<sp/>Could<sp/>use<sp/>vector<sp/>for<sp/>this<sp/>since<sp/>the<sp/>enum<sp/>just<sp/>compiles<sp/>to<sp/>an<sp/>int.<sp/>But</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//need<sp/>to<sp/>make<sp/>sure<sp/>things<sp/>are<sp/>in<sp/>the<sp/>right<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">std::map&lt;LogFlag,<sp/>std::string&gt;<sp/>log_flag_chars_begin<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>{ALG_NAME,<sp/></highlight><highlight class="stringliteral">&quot;\nA&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>{CITATION,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>{CONFIG,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>{DEBUG,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[95md&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>{ERROR,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>{MEM_USE,<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{MISC,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>{PROGRESS,<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>{TIME_USE,<sp/></highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>{WARN,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[91mW&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">std::map&lt;LogFlag,<sp/>std::string&gt;<sp/>log_flag_chars_end<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>{ALG_NAME,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{CITATION,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{CONFIG,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>{DEBUG,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>{ERROR,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{MEM_USE,<sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{MISC,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{PROGRESS,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{TIME_USE,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{WARN,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RDLOGfunc(LogFlag<sp/>flag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/>std::string<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::cerr&lt;&lt;log_flag_chars_begin.at(flag)&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;msg</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>RICHDEM_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">&lt;&lt;file&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;func&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;line&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\033[39m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>&lt;&lt;log_flag_chars_end.at(flag)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/z/richdem/include/richdem/richdem.cpp"/>
  </compounddef>
</doxygen>
